{"results": [{"node": {"name": "VW_LIQUIDS_SHIPMENT", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/VW_LIQUIDS_SHIPMENT.sql", "original_file_path": "models/curated/OTD/VW_LIQUIDS_SHIPMENT.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='view' ) }}\n\nwith SRC_LIKP as (\n\n    select * from {{ source('SAPG9', 'LIKP') }}\n\n),\nSRC_OIGSI as (\n\n    select * from {{ source('SAPG9', 'OIGSI') }}\n\n),\nSRC_OIGS as (\n\n    select * from {{ source('SAPG9', 'OIGS') }}\n\n)\n\nSELECT\n    l.VBELN\n    ,oi.SHNUMBER AS SHIPMENT_NUMBER\n    ,oi.SHNUMBER AS MARINE_SHIPMENT\n    ,NULL AS FREIGHT_BOOKING\n    ,oi.SHNUMBER AS SHIPMENT\n    ,ogs.YCDRG_EXT_FREIGHT_ORD AS FREIGHT_ORDER\nFROM SRC_LIKP l\n    LEFT OUTER JOIN SRC_OIGSI oi ON oi.DOC_NUMBER = l.VBELN and oi.DOC_TYP = 'J'\n    LEFT OUTER JOIN SRC_OIGS ogs ON ogs.SHNUMBER = oi.SHNUMBER", "refs": [], "sources": [["SAPG9", "LIKP"], ["SAPG9", "OIGSI"], ["SAPG9", "OIGS"]], "depends_on": {"nodes": ["source.otd.SAPG9.LIKP", "source.otd.SAPG9.OIGSI", "source.otd.SAPG9.OIGS"], "macros": []}, "unique_id": "model.otd.VW_LIQUIDS_SHIPMENT", "empty": false, "fqn": ["otd", "curated", "OTD", "VW_LIQUIDS_SHIPMENT"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "view", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "VW_LIQUIDS_SHIPMENT", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nwith SRC_LIKP as (\n\n    select * from CHEM_DEV_RAW.SAPG9.LIKP\n\n),\nSRC_OIGSI as (\n\n    select * from CHEM_DEV_RAW.SAPG9.OIGSI\n\n),\nSRC_OIGS as (\n\n    select * from CHEM_DEV_RAW.SAPG9.OIGS\n\n)\n\nSELECT\n    l.VBELN\n    ,oi.SHNUMBER AS SHIPMENT_NUMBER\n    ,oi.SHNUMBER AS MARINE_SHIPMENT\n    ,NULL AS FREIGHT_BOOKING\n    ,oi.SHNUMBER AS SHIPMENT\n    ,ogs.YCDRG_EXT_FREIGHT_ORD AS FREIGHT_ORDER\nFROM SRC_LIKP l\n    LEFT OUTER JOIN SRC_OIGSI oi ON oi.DOC_NUMBER = l.VBELN and oi.DOC_TYP = 'J'\n    LEFT OUTER JOIN SRC_OIGS ogs ON ogs.SHNUMBER = oi.SHNUMBER", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith SRC_LIKP as (\n\n    select * from CHEM_DEV_RAW.SAPG9.LIKP\n\n),\nSRC_OIGSI as (\n\n    select * from CHEM_DEV_RAW.SAPG9.OIGSI\n\n),\nSRC_OIGS as (\n\n    select * from CHEM_DEV_RAW.SAPG9.OIGS\n\n)\n\nSELECT\n    l.VBELN\n    ,oi.SHNUMBER AS SHIPMENT_NUMBER\n    ,oi.SHNUMBER AS MARINE_SHIPMENT\n    ,NULL AS FREIGHT_BOOKING\n    ,oi.SHNUMBER AS SHIPMENT\n    ,ogs.YCDRG_EXT_FREIGHT_ORD AS FREIGHT_ORDER\nFROM SRC_LIKP l\n    LEFT OUTER JOIN SRC_OIGSI oi ON oi.DOC_NUMBER = l.VBELN and oi.DOC_TYP = 'J'\n    LEFT OUTER JOIN SRC_OIGS ogs ON ogs.SHNUMBER = oi.SHNUMBER", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/VW_LIQUIDS_SHIPMENT.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010141849517822266, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.298698Z", "completed_at": "2019-10-17T04:42:17.306984Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.307126Z", "completed_at": "2019-10-17T04:42:17.308392Z"}]}, {"node": {"name": "VW_CUSTOMER_MASTER", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/DIGITAL_MARKETING/VW_CUSTOMER_MASTER.sql", "original_file_path": "models/curated/DIGITAL_MARKETING/VW_CUSTOMER_MASTER.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='view' ) }}\n\n\nSELECT DISTINCT\n    K1.KUNNR AS KNA1_KUNNR_CustomerNumber\n    ,K1.LAND1 AS KNA1_LAND1_CountryKey\n    ,C1.LANDX AS T005T_LANDX_CountryDesc\n    ,K1.NAME1 AS KNA1_NAME1          \n    ,K1.NAME2 AS KNA1_NAME2             \n    ,K1.NAME3 AS KNA1_NAME3             -- Name 3\n    ,K1.NAME4 AS KNA1_NAME4             -- Name 4\n    ,K1.ORT01 AS KNA1_ORT01_City\n    ,K1.PSTLZ AS KNA1_PSTLZ_PostalCode\n    ,K1.REGIO AS KNA1_REGIO_Region             -- Region (State, Province, County)\n    ,K1.SORTL AS KNA1_SORTL_SearchTerm             -- Sort field\n    ,K1.STRAS AS KNA1_STRAS_Street             -- House number and street\n    ,K1.TELF1 AS KNA1_TELF1_Telephone             -- First telephone number\n    ,K1.TELFX AS KNA1_TELFX_Fax             -- Fax Number\n    ,K1.LOEVM AS KNA1_LOEVM_DeletionIndicator\n    ,CASE WHEN K1.LOEVM = '' then 0 WHEN K1.LOEVM = 'X' then 1 END AS  CustomerMaster_DeletionFlag\n    ,K1.XCPDK AS KNA1_XCPDK_OneTimeAccountIndicator         -- OneTimeAccount Indicator\n    ,K1.ADRNR AS KNA1_ADRNR_AddressNumber             -- Address\n    ,K1.MCOD1 AS KNA1_MCOD1_SearchMatchCode1             -- Search Term Match Code 1\n    ,K1.MCOD2 AS KNA1_MCOD2_SearchMatchCode2             -- Search Term Match Code 2\n    ,K1.MCOD3 AS KNA1_MCOD3_SearchMatchCode3             -- Search Term Match Code 3\n    ,K1.AUFSD AS KNA1_AUFSD_CentralOrderBlock             -- Central order block for customer\n    ,K1.BAHNE AS KNA1_BAHNE_ExpressTrainStation             -- Express train station\n    ,K1.BAHNS AS KNA1_BAHNS_TrainStation             -- Train station\n    ,K1.BEGRU AS KNA1_BEGRU_AuthorizationGroup             -- Authorization Group\n    ,K1.BUBKZ AS KNA1_BUBKZ_CheckDigitIntLocationIndicator             -- Check digit for the international location number\n    ,K1.ERDAT AS KNA1_ERDAT_CreatedDate             -- Date on which the Record Was Created\n    ,K1.ERNAM AS KNA1_ERNAM_CreatedBy             -- Name of Person who Created the Object\n    ,K1.EXABL AS KNA1_EXABL_IndicatorUnloadingPointExist             -- Indicator: Unloading points exist\n    ,K1.FAKSD AS KNA1_FAKSD_CentralBillingBlock             -- Central billing block for customer\n    ,K1.FISKN AS KNA1_FISKN_AccountNumberMasterRec             -- Account number of the master record with the fiscal address\n    ,K1.KONZS AS KNA1_KONZS_GroupKey             -- Group key\n    ,K1.KTOKD AS KNA1_KTOKD_AccountGroup             -- Customer Account Group\n    ,K1.KUKLA AS KNA1_KUKLA_CustClassification             -- Customer classification\n    ,K1.LIFNR AS KNA1_LIFNR_AccNoVendorCreditor             -- Account Number of Vendor or Creditor\n    ,K1.LIFSD AS KNA1_LIFSD_CentralDeliveryBlock             -- Central delivery block for the customer\n    ,K1.LOCCO AS KNA1_LOCCO_CityCoordinates             -- City Coordinates\n    ,K1.LOEVM AS KNA1_LOEVM_CentralDeletionFlag             -- Central Deletion Flag for Master Record\n    ,K1.ORT02 AS KNA1_ORT02_District             -- District\n    ,K1.PFACH AS KNA1_PFACH_POBox             -- PO Box\n    ,K1.PSTL2 AS KNA1_PSTL2_PostalCode             -- P.O. Box Postal Code\n    ,K1.COUNC AS KNA1_COUNC_CountryCode             -- County Code\n    ,K1.SPERR AS KNA1_SPERR_CentralPostingBlock             -- Central posting block\n    ,K1.SPRAS AS KNA1_SPRAS_LanguageKey             -- Language Key\n    ,E1.SPTXT AS T002T_SPTXT_LanguageDescription\n    ,K1.STCD1 AS KNA1_STCD1_TaxNumber1             -- Tax Number 1\n    ,K1.STCD2 AS KNA1_STCD2_TaxNumber2             -- Tax Number 2\n    ,K1.STCD3 AS KNA1_STCD3_TaxNumber3             -- Tax Number 3\n    ,K1.STCD4 AS KNA1_STCD4_TaxNumber4             -- Tax Number 4\n    ,K1.TELF2 AS KNA1_TELF2_SecondTelephoneNumber             -- Second telephone number\n    ,K1.LZONE AS KNA1_LZONE_TransportationZone             -- Transportation zone to or from which the goods are delivered\n    ,K1.VBUND AS KNA1_VBUND_TradingPartnerCompanyID             -- Trading Partner Company ID\n    ,K1.STCEG AS KNA1_STCEG_VATRegisterationNumber             -- VAT Registration Number\n    ,K1.DEAR2 AS KNA1_DEAR2_SalesPartnerIndicator             -- Sales Partner Indicator\n    ,K1.BRAN1 AS KNA1_BRAN1_IndustryCode1             -- Industry Code 1\n    ,K1.BRAN5 AS KNA1_BRAN5_IndustryCode5             -- Industry code 5\n    ,K1.KATR10 AS KNA1_KATR10_Attribute10           -- Attribute 10\n    ,K1.STKZN AS KNA1_STKZN_NaturalPerson             -- Natural Person\n    ,K1.TXJCD AS KNA1_TXJCD_TaxJurisdiction             -- Tax Jurisdiction\n    ,K1.KTOCD AS KNA1_KTOCD_RefAccGroupOneTimeCust             -- Reference Account Group for One-Time Account (Customer)\n    ,K1.PFORT AS KNA1_PFORT_POBoxCity             -- PO Box city\n    ,K1.DUEFL AS KNA1_DUEFL_StatusOfDataTransfer             -- Status of Data Transfer into Subsequent Release\n    ,K1.KDKG4 AS KNA1_KDKG4_CustomerConditionGroup4             -- Customer condition group 4\n    ,K1.FITYP AS KNA1_FITYP_TaxType             -- Tax type\n    ,K1.STCDT AS KNA1_STCDT_TaxNumberType             -- Tax Number Type\n    ,K1.XICMS AS KNA1_XICMS_ICMSExempt             -- Customer is ICMS-exempt\n    ,K1.XXIPI AS KNA1_XXIPI_IPIExempt             -- Customer is IPI-exempt\n    ,K1.XSUBT AS KNA1_XSUBT_CustGrpSubstTributaryCalculation             -- Customer group for Substitui\u00e7ao Tribut\u00e1ria calculation\n    ,K1.CFOPC AS KNA1_CFOPC_CFOPCategory             -- Customer's CFOP category\n    ,K1.TXLW1 AS KNA1_TXLW1_TaxLawICMS             -- Tax law: ICMS\n    ,K1.TXLW2 AS KNA1_TXLW2_TaxLawIPI             -- Tax law: IPI\n    ,K1.CASSD AS KNA1_CASSD_CentralSalesBlock             -- Central sales block for customer\n    ,K1.KNURL AS KNA1_KNURL_UniformResourceLocator             -- Uniform Resource Locator\n    ,K1.J_1KFREPRE AS KNA1_J_1KFREPRE_NameOfRepresentative   -- Name of Representative\n    ,K1.J_1KFTBUS AS KNA1_J_1KFTBUS_TypeOfBusiness     -- Type of Business\n    ,K1.NODEL AS KNA1_NODEL_CentralDeletionBlock             -- Central deletion block for master record\n    ,K1.OID_POREQD AS KNA1_OID_POREQD_PurchaseOrderRequired   -- Purchase order required: X = Yes, Blank = No\n    ,A1.ADDRNUMBER AS ADRC_ADDRNUMBER_AddressNumber   -- Address Number\n    ,A1.DATE_FROM AS ADRC_DATE_FROM_ValidFromDate     -- Valid-from date - in current Release only 00010101 possible\n    ,A1.NATION AS ADRC_NATION_VersionIdIntAddress             -- Version ID for International Addresses\n    ,A1.DATE_TO AS ADRC_DATE_TO_ValidTo             -- Valid-to date in current Release only 99991231 possible\n    ,A1.TITLE AS ADRC_TITLE_FormOfAddressKey                     -- Form-of-Address Key\n    ,A1.NAME1 AS ADRC_NAME1                     -- Name adrc1\n    ,A1.NAME2 AS ADRC_NAME2                     -- Name adrc2\n    ,A1.NAME3 AS ADRC_NAME3                     -- Name adrc3\n    ,A1.NAME4 AS ADRC_NAME4                     -- Name adrc4\n    ,A1.NAME_TEXT AS ADRC_NAME_TEXT             -- Converted name field (with form of address)\n    ,A1.NAME_CO AS ADRC_NAME_CO                 -- c/o name\n    ,A1.CITY1 AS ADRC_CITY1                     -- City adrc\n    ,A1.CITY2 AS ADRC_CITY2                     -- District adrc\n    ,A1.HOME_CITY AS ADRC_HOME_CITY             -- City (different from postal city)\n    ,A1.POST_CODE1 AS ADRC_POST_CODE1           -- City postal code\n    ,A1.POST_CODE2 AS ADRC_POST_CODE2           -- PO Box Postal Code\n    ,A1.POST_CODE3 AS ADRC_POST_CODE3           -- Company Postal Code (for Large Customers)\n    ,A1.PO_BOX AS ADRC_PO_BOX                   -- PO Box adrc\n    ,A1.PO_BOX_LOC AS ADRC_PO_BOX_LOC           -- PO Box city adrc\n    ,A1.PO_BOX_REG AS ADRC_PO_BOX_REG           -- Region for PO Box (Country, State, Province, ...)\n    ,A1.TRANSPZONE AS ADRC_TRANSPZONE           -- Transportation zone to or from which the goods are delivered adrc\n    ,A1.STREET AS ADRC_STREET                   -- Street\n    ,A1.HOUSE_NUM1 AS ADRC_HOUSE_NUM1           -- House Number\n    ,A1.HOUSE_NUM2 AS ADRC_HOUSE_NUM2           -- House number supplement\n    ,A1.HOUSE_NUM3 AS ADRC_HOUSE_NUM3           -- (Not supported) House Number Range\n    ,A1.STR_SUPPL1 AS ADRC_STR_SUPPL1           -- Street 2\n    ,A1.STR_SUPPL2 AS ADRC_STR_SUPPL2           -- Street 3\n    ,A1.STR_SUPPL3 AS ADRC_STR_SUPPL3           -- Street 4\n    ,A1.LOCATION AS ADRC_LOCATION               -- Street 5\n    ,A1.BUILDING AS ADRC_BUILDING               -- Building (Number or Code)\n    ,A1.FLOOR AS ADRC_FLOOR                     -- Floor in building\n    ,A1.ROOMNUMBER AS ADRC_ROOMNUMBER           -- Room or Apartment Number\n    ,A1.COUNTRY AS ADRC_COUNTRY                 -- Country Key adrc\n    ,A1.LANGU AS ADRC_LANGU                     -- Language Key adrc\n    ,A1.REGION AS ADRC_REGION                   -- Region (State, Province, County) adrc\n    ,A1.ADDR_GROUP AS ADRC_ADDR_GROUP           -- Address Group (Key) (Business Address Services)\n    ,A1.FLAGGROUPS AS ADRC_FLAGGROUPS           -- Flag: There are more address group assignments\n    ,A1.PERS_ADDR AS ADRC_PERS_ADDR             -- Flag: This is a personal address\n    ,A1.SORT1 AS ADRC_SORT1\t\t\t\t\t  -- Search Term 1\n    ,A1.SORT2 AS ADRC_SORT2                     -- Search Term 2\n    ,A1.DEFLT_COMM AS ADRC_DEFLT_COMM           -- Communication Method (Key) (Business Address Services)\n    ,A1.TEL_NUMBER AS ADRC_TEL_NUMBER           -- First telephone no.: dialling code+number\n    ,A1.TEL_EXTENS AS ADRC_TEL_EXTENS           -- First Telephone No.: Extension\n    ,A1.FAX_NUMBER AS ADRC_FAX_NUMBER           -- First fax no.: dialling code+number\n    ,A1.FAX_EXTENS AS ADRC_FAX_EXTENS           -- First fax no.: extension\n    ,A1.FLAGCOMM2 AS ADRC_FLAGCOMM2             -- Flag: Telephone number(s) maintained\n    ,A1.FLAGCOMM3 AS ADRC_FLAGCOMM3             -- Flag: Fax number(s) maintained\n    ,A1.FLAGCOMM4 AS ADRC_FLAGCOMM4             -- Flag: Teletex number(s) maintained\n    ,A1.FLAGCOMM5 AS ADRC_FLAGCOMM5             -- Flag: Telex number(s) maintained\n    ,A1.FLAGCOMM6 AS ADRC_FLAGCOMM6             -- Indicator: E-Mail Address(es) Maintained\n    ,A1.FLAGCOMM7 AS ADRC_FLAGCOMM7             -- Flag: RML (remote mail) addresse(s) maintained\n    ,A1.FLAGCOMM12 AS FLAGCOMM12                -- Flag: URI/FTP address maintained\n    ,A1.FLAGCOMM13 AS FLAGCOMM13                  -- Flag: Pager address maintained\n    ,A1.MC_NAME1 AS ADRC_MC_NAME1                 -- Name (field NAME1) in upper case for matchcode\n    ,A1.MC_CITY1 AS ADRC_MC_CITY1                 -- City name in upper case for search help\n    ,A1.MC_STREET AS ADRC_MC_STREET               -- Street name in upper case for search help\n    ,A1.EXTENSION1 AS ADRC_EXTENSION1             -- Extension (only for data conversion) (e.g. data line)\n    ,A1.EXTENSION2 AS ADRC_EXTENSION2             -- Extension (only for data conversion) (e.g. telebox)\n    ,A1.TIME_ZONE AS ADRC_TIME_ZONE               -- Address time zone\n    ,A1.TAXJURCODE AS TAXJURCODE                  -- Tax Jurisdiction adrc\n    ,A1.LANGU_CREA AS LANGU_CREA                  -- Address record creation original language\n    ,A1.ADRC_UUID AS ADRC_ADRC_UUID               -- UUID Used in the Address\n    ,A1.UUID_BELATED AS ADRC_UUID_BELATED         -- Indicator: UUID was generated later\n    ,A1.ADRC_ERR_STATUS AS ADRC_ADRC_ERR_STATUS   -- Error Status of Address\n    ,A1.PO_BOX_LOBBY AS ADRC_PO_BOX_LOBBY         -- PO Box Lobby\n    ,T1.TXT30 AS T077X_TXT30                      -- Customer Account Group Description\n    ,k1.AUFSD as KNA1_AUFSD\n    ,TVAST.VTEXT as TVAST_VTEXT\n    ,k1.FAKSD as KNA1_FAKSD\n    ,TVFST.VTEXT as TVFST_VTEXT\n    ,k1.LIFSD as KNA1_LIFSD\n    ,TVLST.VTEXT as TVLST_VTEXT\n\n    FROM {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_KNA1') }} as K1\n    LEFT JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_ADRC') }} as A1 on K1.ADRNR = a1.ADDRNUMBER and A1.NATION = '' and A1.CLIENT = K1.MANDT\n    LEFT JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_T077X') }} as T1 on T1.KTOKD = K1.KTOKD and T1.SPRAS = 'E'\n    LEFT JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_T002T') }} as E1 on E1.SPRAS = 'E' and E1.SPRSL = K1.SPRAS \n    LEFT JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_T005T') }} as C1 on C1.SPRAS = K1.SPRAS and C1.LAND1 = K1.LAND1\n    LEFT JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_TVFST') }} as TVFST \n    \ton TVFST.FAKSP = k1.FAKSD and TVFST.SPRAS = 'E'\n    LEFT JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_TVLST') }} as TVLST \n    \ton TVLST.LIFSP = k1.LIFSD and TVLST.SPRAS = 'E'\n    LEFT JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_TVAST') }} as TVAST\n    \ton TVAST.AUFSP = k1.AUFSD and TVAST.SPRAS = 'E'\n    \n\n-- CREATE OR REPLACE VIEW curated.SALES_VOLUME_REPORT_VW AS (\n-- SELECT\n--   SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n--  ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n--  ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n--  ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n--  ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Industry\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n--  ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n--  ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n--  ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n--  ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n--  ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n--  ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n--  ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n--  ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n--  ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n--  ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n--  ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n--  ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n--  ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \n-- FROM\n--   CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAK\" SAP_VBAK_STG\n--   INNER JOIN CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAP1\" SAP_VBAP_STG\n--     ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) AND\n--        (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n--   LEFT OUTER JOIN CHEM_DEVELOPMENT.RAW.\"SAPG9_TCURR\" TCURR\n--     ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n--   LEFT JOIN CHEM_DEVELoPMENT.RAW.\"DM_SALES_VOLUMELATEST\" DM_SAlES_VOLUMELATEST\n--   ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n--   AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n--   AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \n-- where SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\n-- and sap_vbak_stg.ernam <> 'XXPMBUPLD' \n-- and sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \n-- and sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n-- );", "refs": [], "sources": [["CHEM_DEVELOPMENT_RAW", "SAP_G9_KNA1"], ["CHEM_DEVELOPMENT_RAW", "SAP_G9_ADRC"], ["CHEM_DEVELOPMENT_RAW", "SAP_G9_T077X"], ["CHEM_DEVELOPMENT_RAW", "SAP_G9_T002T"], ["CHEM_DEVELOPMENT_RAW", "SAP_G9_T005T"], ["CHEM_DEVELOPMENT_RAW", "SAP_G9_TVFST"], ["CHEM_DEVELOPMENT_RAW", "SAP_G9_TVLST"], ["CHEM_DEVELOPMENT_RAW", "SAP_G9_TVAST"]], "depends_on": {"nodes": ["source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_KNA1", "source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_ADRC", "source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_T077X", "source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_T002T", "source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_T005T", "source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_TVFST", "source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_TVLST", "source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_TVAST"], "macros": []}, "unique_id": "model.otd.VW_CUSTOMER_MASTER", "empty": false, "fqn": ["otd", "curated", "DIGITAL_MARKETING", "VW_CUSTOMER_MASTER"], "tags": [], "config": {"enabled": true, "materialized": "view", "post-hook": [], "pre-hook": [], "tags": [], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "DM_VHMAP", "database": "CHEM_DEV_CURATED"}, "schema": "DM_VHMAP", "database": "CHEM_DEV_CURATED", "alias": "VW_CUSTOMER_MASTER", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\nSELECT DISTINCT\n    K1.KUNNR AS KNA1_KUNNR_CustomerNumber\n    ,K1.LAND1 AS KNA1_LAND1_CountryKey\n    ,C1.LANDX AS T005T_LANDX_CountryDesc\n    ,K1.NAME1 AS KNA1_NAME1          \n    ,K1.NAME2 AS KNA1_NAME2             \n    ,K1.NAME3 AS KNA1_NAME3             -- Name 3\n    ,K1.NAME4 AS KNA1_NAME4             -- Name 4\n    ,K1.ORT01 AS KNA1_ORT01_City\n    ,K1.PSTLZ AS KNA1_PSTLZ_PostalCode\n    ,K1.REGIO AS KNA1_REGIO_Region             -- Region (State, Province, County)\n    ,K1.SORTL AS KNA1_SORTL_SearchTerm             -- Sort field\n    ,K1.STRAS AS KNA1_STRAS_Street             -- House number and street\n    ,K1.TELF1 AS KNA1_TELF1_Telephone             -- First telephone number\n    ,K1.TELFX AS KNA1_TELFX_Fax             -- Fax Number\n    ,K1.LOEVM AS KNA1_LOEVM_DeletionIndicator\n    ,CASE WHEN K1.LOEVM = '' then 0 WHEN K1.LOEVM = 'X' then 1 END AS  CustomerMaster_DeletionFlag\n    ,K1.XCPDK AS KNA1_XCPDK_OneTimeAccountIndicator         -- OneTimeAccount Indicator\n    ,K1.ADRNR AS KNA1_ADRNR_AddressNumber             -- Address\n    ,K1.MCOD1 AS KNA1_MCOD1_SearchMatchCode1             -- Search Term Match Code 1\n    ,K1.MCOD2 AS KNA1_MCOD2_SearchMatchCode2             -- Search Term Match Code 2\n    ,K1.MCOD3 AS KNA1_MCOD3_SearchMatchCode3             -- Search Term Match Code 3\n    ,K1.AUFSD AS KNA1_AUFSD_CentralOrderBlock             -- Central order block for customer\n    ,K1.BAHNE AS KNA1_BAHNE_ExpressTrainStation             -- Express train station\n    ,K1.BAHNS AS KNA1_BAHNS_TrainStation             -- Train station\n    ,K1.BEGRU AS KNA1_BEGRU_AuthorizationGroup             -- Authorization Group\n    ,K1.BUBKZ AS KNA1_BUBKZ_CheckDigitIntLocationIndicator             -- Check digit for the international location number\n    ,K1.ERDAT AS KNA1_ERDAT_CreatedDate             -- Date on which the Record Was Created\n    ,K1.ERNAM AS KNA1_ERNAM_CreatedBy             -- Name of Person who Created the Object\n    ,K1.EXABL AS KNA1_EXABL_IndicatorUnloadingPointExist             -- Indicator: Unloading points exist\n    ,K1.FAKSD AS KNA1_FAKSD_CentralBillingBlock             -- Central billing block for customer\n    ,K1.FISKN AS KNA1_FISKN_AccountNumberMasterRec             -- Account number of the master record with the fiscal address\n    ,K1.KONZS AS KNA1_KONZS_GroupKey             -- Group key\n    ,K1.KTOKD AS KNA1_KTOKD_AccountGroup             -- Customer Account Group\n    ,K1.KUKLA AS KNA1_KUKLA_CustClassification             -- Customer classification\n    ,K1.LIFNR AS KNA1_LIFNR_AccNoVendorCreditor             -- Account Number of Vendor or Creditor\n    ,K1.LIFSD AS KNA1_LIFSD_CentralDeliveryBlock             -- Central delivery block for the customer\n    ,K1.LOCCO AS KNA1_LOCCO_CityCoordinates             -- City Coordinates\n    ,K1.LOEVM AS KNA1_LOEVM_CentralDeletionFlag             -- Central Deletion Flag for Master Record\n    ,K1.ORT02 AS KNA1_ORT02_District             -- District\n    ,K1.PFACH AS KNA1_PFACH_POBox             -- PO Box\n    ,K1.PSTL2 AS KNA1_PSTL2_PostalCode             -- P.O. Box Postal Code\n    ,K1.COUNC AS KNA1_COUNC_CountryCode             -- County Code\n    ,K1.SPERR AS KNA1_SPERR_CentralPostingBlock             -- Central posting block\n    ,K1.SPRAS AS KNA1_SPRAS_LanguageKey             -- Language Key\n    ,E1.SPTXT AS T002T_SPTXT_LanguageDescription\n    ,K1.STCD1 AS KNA1_STCD1_TaxNumber1             -- Tax Number 1\n    ,K1.STCD2 AS KNA1_STCD2_TaxNumber2             -- Tax Number 2\n    ,K1.STCD3 AS KNA1_STCD3_TaxNumber3             -- Tax Number 3\n    ,K1.STCD4 AS KNA1_STCD4_TaxNumber4             -- Tax Number 4\n    ,K1.TELF2 AS KNA1_TELF2_SecondTelephoneNumber             -- Second telephone number\n    ,K1.LZONE AS KNA1_LZONE_TransportationZone             -- Transportation zone to or from which the goods are delivered\n    ,K1.VBUND AS KNA1_VBUND_TradingPartnerCompanyID             -- Trading Partner Company ID\n    ,K1.STCEG AS KNA1_STCEG_VATRegisterationNumber             -- VAT Registration Number\n    ,K1.DEAR2 AS KNA1_DEAR2_SalesPartnerIndicator             -- Sales Partner Indicator\n    ,K1.BRAN1 AS KNA1_BRAN1_IndustryCode1             -- Industry Code 1\n    ,K1.BRAN5 AS KNA1_BRAN5_IndustryCode5             -- Industry code 5\n    ,K1.KATR10 AS KNA1_KATR10_Attribute10           -- Attribute 10\n    ,K1.STKZN AS KNA1_STKZN_NaturalPerson             -- Natural Person\n    ,K1.TXJCD AS KNA1_TXJCD_TaxJurisdiction             -- Tax Jurisdiction\n    ,K1.KTOCD AS KNA1_KTOCD_RefAccGroupOneTimeCust             -- Reference Account Group for One-Time Account (Customer)\n    ,K1.PFORT AS KNA1_PFORT_POBoxCity             -- PO Box city\n    ,K1.DUEFL AS KNA1_DUEFL_StatusOfDataTransfer             -- Status of Data Transfer into Subsequent Release\n    ,K1.KDKG4 AS KNA1_KDKG4_CustomerConditionGroup4             -- Customer condition group 4\n    ,K1.FITYP AS KNA1_FITYP_TaxType             -- Tax type\n    ,K1.STCDT AS KNA1_STCDT_TaxNumberType             -- Tax Number Type\n    ,K1.XICMS AS KNA1_XICMS_ICMSExempt             -- Customer is ICMS-exempt\n    ,K1.XXIPI AS KNA1_XXIPI_IPIExempt             -- Customer is IPI-exempt\n    ,K1.XSUBT AS KNA1_XSUBT_CustGrpSubstTributaryCalculation             -- Customer group for Substitui\u00e7ao Tribut\u00e1ria calculation\n    ,K1.CFOPC AS KNA1_CFOPC_CFOPCategory             -- Customer's CFOP category\n    ,K1.TXLW1 AS KNA1_TXLW1_TaxLawICMS             -- Tax law: ICMS\n    ,K1.TXLW2 AS KNA1_TXLW2_TaxLawIPI             -- Tax law: IPI\n    ,K1.CASSD AS KNA1_CASSD_CentralSalesBlock             -- Central sales block for customer\n    ,K1.KNURL AS KNA1_KNURL_UniformResourceLocator             -- Uniform Resource Locator\n    ,K1.J_1KFREPRE AS KNA1_J_1KFREPRE_NameOfRepresentative   -- Name of Representative\n    ,K1.J_1KFTBUS AS KNA1_J_1KFTBUS_TypeOfBusiness     -- Type of Business\n    ,K1.NODEL AS KNA1_NODEL_CentralDeletionBlock             -- Central deletion block for master record\n    ,K1.OID_POREQD AS KNA1_OID_POREQD_PurchaseOrderRequired   -- Purchase order required: X = Yes, Blank = No\n    ,A1.ADDRNUMBER AS ADRC_ADDRNUMBER_AddressNumber   -- Address Number\n    ,A1.DATE_FROM AS ADRC_DATE_FROM_ValidFromDate     -- Valid-from date - in current Release only 00010101 possible\n    ,A1.NATION AS ADRC_NATION_VersionIdIntAddress             -- Version ID for International Addresses\n    ,A1.DATE_TO AS ADRC_DATE_TO_ValidTo             -- Valid-to date in current Release only 99991231 possible\n    ,A1.TITLE AS ADRC_TITLE_FormOfAddressKey                     -- Form-of-Address Key\n    ,A1.NAME1 AS ADRC_NAME1                     -- Name adrc1\n    ,A1.NAME2 AS ADRC_NAME2                     -- Name adrc2\n    ,A1.NAME3 AS ADRC_NAME3                     -- Name adrc3\n    ,A1.NAME4 AS ADRC_NAME4                     -- Name adrc4\n    ,A1.NAME_TEXT AS ADRC_NAME_TEXT             -- Converted name field (with form of address)\n    ,A1.NAME_CO AS ADRC_NAME_CO                 -- c/o name\n    ,A1.CITY1 AS ADRC_CITY1                     -- City adrc\n    ,A1.CITY2 AS ADRC_CITY2                     -- District adrc\n    ,A1.HOME_CITY AS ADRC_HOME_CITY             -- City (different from postal city)\n    ,A1.POST_CODE1 AS ADRC_POST_CODE1           -- City postal code\n    ,A1.POST_CODE2 AS ADRC_POST_CODE2           -- PO Box Postal Code\n    ,A1.POST_CODE3 AS ADRC_POST_CODE3           -- Company Postal Code (for Large Customers)\n    ,A1.PO_BOX AS ADRC_PO_BOX                   -- PO Box adrc\n    ,A1.PO_BOX_LOC AS ADRC_PO_BOX_LOC           -- PO Box city adrc\n    ,A1.PO_BOX_REG AS ADRC_PO_BOX_REG           -- Region for PO Box (Country, State, Province, ...)\n    ,A1.TRANSPZONE AS ADRC_TRANSPZONE           -- Transportation zone to or from which the goods are delivered adrc\n    ,A1.STREET AS ADRC_STREET                   -- Street\n    ,A1.HOUSE_NUM1 AS ADRC_HOUSE_NUM1           -- House Number\n    ,A1.HOUSE_NUM2 AS ADRC_HOUSE_NUM2           -- House number supplement\n    ,A1.HOUSE_NUM3 AS ADRC_HOUSE_NUM3           -- (Not supported) House Number Range\n    ,A1.STR_SUPPL1 AS ADRC_STR_SUPPL1           -- Street 2\n    ,A1.STR_SUPPL2 AS ADRC_STR_SUPPL2           -- Street 3\n    ,A1.STR_SUPPL3 AS ADRC_STR_SUPPL3           -- Street 4\n    ,A1.LOCATION AS ADRC_LOCATION               -- Street 5\n    ,A1.BUILDING AS ADRC_BUILDING               -- Building (Number or Code)\n    ,A1.FLOOR AS ADRC_FLOOR                     -- Floor in building\n    ,A1.ROOMNUMBER AS ADRC_ROOMNUMBER           -- Room or Apartment Number\n    ,A1.COUNTRY AS ADRC_COUNTRY                 -- Country Key adrc\n    ,A1.LANGU AS ADRC_LANGU                     -- Language Key adrc\n    ,A1.REGION AS ADRC_REGION                   -- Region (State, Province, County) adrc\n    ,A1.ADDR_GROUP AS ADRC_ADDR_GROUP           -- Address Group (Key) (Business Address Services)\n    ,A1.FLAGGROUPS AS ADRC_FLAGGROUPS           -- Flag: There are more address group assignments\n    ,A1.PERS_ADDR AS ADRC_PERS_ADDR             -- Flag: This is a personal address\n    ,A1.SORT1 AS ADRC_SORT1\t\t\t\t\t  -- Search Term 1\n    ,A1.SORT2 AS ADRC_SORT2                     -- Search Term 2\n    ,A1.DEFLT_COMM AS ADRC_DEFLT_COMM           -- Communication Method (Key) (Business Address Services)\n    ,A1.TEL_NUMBER AS ADRC_TEL_NUMBER           -- First telephone no.: dialling code+number\n    ,A1.TEL_EXTENS AS ADRC_TEL_EXTENS           -- First Telephone No.: Extension\n    ,A1.FAX_NUMBER AS ADRC_FAX_NUMBER           -- First fax no.: dialling code+number\n    ,A1.FAX_EXTENS AS ADRC_FAX_EXTENS           -- First fax no.: extension\n    ,A1.FLAGCOMM2 AS ADRC_FLAGCOMM2             -- Flag: Telephone number(s) maintained\n    ,A1.FLAGCOMM3 AS ADRC_FLAGCOMM3             -- Flag: Fax number(s) maintained\n    ,A1.FLAGCOMM4 AS ADRC_FLAGCOMM4             -- Flag: Teletex number(s) maintained\n    ,A1.FLAGCOMM5 AS ADRC_FLAGCOMM5             -- Flag: Telex number(s) maintained\n    ,A1.FLAGCOMM6 AS ADRC_FLAGCOMM6             -- Indicator: E-Mail Address(es) Maintained\n    ,A1.FLAGCOMM7 AS ADRC_FLAGCOMM7             -- Flag: RML (remote mail) addresse(s) maintained\n    ,A1.FLAGCOMM12 AS FLAGCOMM12                -- Flag: URI/FTP address maintained\n    ,A1.FLAGCOMM13 AS FLAGCOMM13                  -- Flag: Pager address maintained\n    ,A1.MC_NAME1 AS ADRC_MC_NAME1                 -- Name (field NAME1) in upper case for matchcode\n    ,A1.MC_CITY1 AS ADRC_MC_CITY1                 -- City name in upper case for search help\n    ,A1.MC_STREET AS ADRC_MC_STREET               -- Street name in upper case for search help\n    ,A1.EXTENSION1 AS ADRC_EXTENSION1             -- Extension (only for data conversion) (e.g. data line)\n    ,A1.EXTENSION2 AS ADRC_EXTENSION2             -- Extension (only for data conversion) (e.g. telebox)\n    ,A1.TIME_ZONE AS ADRC_TIME_ZONE               -- Address time zone\n    ,A1.TAXJURCODE AS TAXJURCODE                  -- Tax Jurisdiction adrc\n    ,A1.LANGU_CREA AS LANGU_CREA                  -- Address record creation original language\n    ,A1.ADRC_UUID AS ADRC_ADRC_UUID               -- UUID Used in the Address\n    ,A1.UUID_BELATED AS ADRC_UUID_BELATED         -- Indicator: UUID was generated later\n    ,A1.ADRC_ERR_STATUS AS ADRC_ADRC_ERR_STATUS   -- Error Status of Address\n    ,A1.PO_BOX_LOBBY AS ADRC_PO_BOX_LOBBY         -- PO Box Lobby\n    ,T1.TXT30 AS T077X_TXT30                      -- Customer Account Group Description\n    ,k1.AUFSD as KNA1_AUFSD\n    ,TVAST.VTEXT as TVAST_VTEXT\n    ,k1.FAKSD as KNA1_FAKSD\n    ,TVFST.VTEXT as TVFST_VTEXT\n    ,k1.LIFSD as KNA1_LIFSD\n    ,TVLST.VTEXT as TVLST_VTEXT\n\n    FROM CHEM_DEVELOPMENT.RAW.SAP_G9_KNA1 as K1\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_ADRC as A1 on K1.ADRNR = a1.ADDRNUMBER and A1.NATION = '' and A1.CLIENT = K1.MANDT\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_T077X as T1 on T1.KTOKD = K1.KTOKD and T1.SPRAS = 'E'\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_T002T as E1 on E1.SPRAS = 'E' and E1.SPRSL = K1.SPRAS \n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_T005T as C1 on C1.SPRAS = K1.SPRAS and C1.LAND1 = K1.LAND1\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_TVFST as TVFST \n    \ton TVFST.FAKSP = k1.FAKSD and TVFST.SPRAS = 'E'\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_TVLST as TVLST \n    \ton TVLST.LIFSP = k1.LIFSD and TVLST.SPRAS = 'E'\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_TVAST as TVAST\n    \ton TVAST.AUFSP = k1.AUFSD and TVAST.SPRAS = 'E'\n    \n\n-- CREATE OR REPLACE VIEW curated.SALES_VOLUME_REPORT_VW AS (\n-- SELECT\n--   SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n--  ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n--  ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n--  ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n--  ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Industry\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n--  ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n--  ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n--  ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n--  ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n--  ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n--  ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n--  ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n--  ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n--  ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n--  ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n--  ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n--  ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n--  ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \n-- FROM\n--   CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAK\" SAP_VBAK_STG\n--   INNER JOIN CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAP1\" SAP_VBAP_STG\n--     ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) AND\n--        (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n--   LEFT OUTER JOIN CHEM_DEVELOPMENT.RAW.\"SAPG9_TCURR\" TCURR\n--     ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n--   LEFT JOIN CHEM_DEVELoPMENT.RAW.\"DM_SALES_VOLUMELATEST\" DM_SAlES_VOLUMELATEST\n--   ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n--   AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n--   AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \n-- where SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\n-- and sap_vbak_stg.ernam <> 'XXPMBUPLD' \n-- and sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \n-- and sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n-- );", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\nSELECT DISTINCT\n    K1.KUNNR AS KNA1_KUNNR_CustomerNumber\n    ,K1.LAND1 AS KNA1_LAND1_CountryKey\n    ,C1.LANDX AS T005T_LANDX_CountryDesc\n    ,K1.NAME1 AS KNA1_NAME1          \n    ,K1.NAME2 AS KNA1_NAME2             \n    ,K1.NAME3 AS KNA1_NAME3             -- Name 3\n    ,K1.NAME4 AS KNA1_NAME4             -- Name 4\n    ,K1.ORT01 AS KNA1_ORT01_City\n    ,K1.PSTLZ AS KNA1_PSTLZ_PostalCode\n    ,K1.REGIO AS KNA1_REGIO_Region             -- Region (State, Province, County)\n    ,K1.SORTL AS KNA1_SORTL_SearchTerm             -- Sort field\n    ,K1.STRAS AS KNA1_STRAS_Street             -- House number and street\n    ,K1.TELF1 AS KNA1_TELF1_Telephone             -- First telephone number\n    ,K1.TELFX AS KNA1_TELFX_Fax             -- Fax Number\n    ,K1.LOEVM AS KNA1_LOEVM_DeletionIndicator\n    ,CASE WHEN K1.LOEVM = '' then 0 WHEN K1.LOEVM = 'X' then 1 END AS  CustomerMaster_DeletionFlag\n    ,K1.XCPDK AS KNA1_XCPDK_OneTimeAccountIndicator         -- OneTimeAccount Indicator\n    ,K1.ADRNR AS KNA1_ADRNR_AddressNumber             -- Address\n    ,K1.MCOD1 AS KNA1_MCOD1_SearchMatchCode1             -- Search Term Match Code 1\n    ,K1.MCOD2 AS KNA1_MCOD2_SearchMatchCode2             -- Search Term Match Code 2\n    ,K1.MCOD3 AS KNA1_MCOD3_SearchMatchCode3             -- Search Term Match Code 3\n    ,K1.AUFSD AS KNA1_AUFSD_CentralOrderBlock             -- Central order block for customer\n    ,K1.BAHNE AS KNA1_BAHNE_ExpressTrainStation             -- Express train station\n    ,K1.BAHNS AS KNA1_BAHNS_TrainStation             -- Train station\n    ,K1.BEGRU AS KNA1_BEGRU_AuthorizationGroup             -- Authorization Group\n    ,K1.BUBKZ AS KNA1_BUBKZ_CheckDigitIntLocationIndicator             -- Check digit for the international location number\n    ,K1.ERDAT AS KNA1_ERDAT_CreatedDate             -- Date on which the Record Was Created\n    ,K1.ERNAM AS KNA1_ERNAM_CreatedBy             -- Name of Person who Created the Object\n    ,K1.EXABL AS KNA1_EXABL_IndicatorUnloadingPointExist             -- Indicator: Unloading points exist\n    ,K1.FAKSD AS KNA1_FAKSD_CentralBillingBlock             -- Central billing block for customer\n    ,K1.FISKN AS KNA1_FISKN_AccountNumberMasterRec             -- Account number of the master record with the fiscal address\n    ,K1.KONZS AS KNA1_KONZS_GroupKey             -- Group key\n    ,K1.KTOKD AS KNA1_KTOKD_AccountGroup             -- Customer Account Group\n    ,K1.KUKLA AS KNA1_KUKLA_CustClassification             -- Customer classification\n    ,K1.LIFNR AS KNA1_LIFNR_AccNoVendorCreditor             -- Account Number of Vendor or Creditor\n    ,K1.LIFSD AS KNA1_LIFSD_CentralDeliveryBlock             -- Central delivery block for the customer\n    ,K1.LOCCO AS KNA1_LOCCO_CityCoordinates             -- City Coordinates\n    ,K1.LOEVM AS KNA1_LOEVM_CentralDeletionFlag             -- Central Deletion Flag for Master Record\n    ,K1.ORT02 AS KNA1_ORT02_District             -- District\n    ,K1.PFACH AS KNA1_PFACH_POBox             -- PO Box\n    ,K1.PSTL2 AS KNA1_PSTL2_PostalCode             -- P.O. Box Postal Code\n    ,K1.COUNC AS KNA1_COUNC_CountryCode             -- County Code\n    ,K1.SPERR AS KNA1_SPERR_CentralPostingBlock             -- Central posting block\n    ,K1.SPRAS AS KNA1_SPRAS_LanguageKey             -- Language Key\n    ,E1.SPTXT AS T002T_SPTXT_LanguageDescription\n    ,K1.STCD1 AS KNA1_STCD1_TaxNumber1             -- Tax Number 1\n    ,K1.STCD2 AS KNA1_STCD2_TaxNumber2             -- Tax Number 2\n    ,K1.STCD3 AS KNA1_STCD3_TaxNumber3             -- Tax Number 3\n    ,K1.STCD4 AS KNA1_STCD4_TaxNumber4             -- Tax Number 4\n    ,K1.TELF2 AS KNA1_TELF2_SecondTelephoneNumber             -- Second telephone number\n    ,K1.LZONE AS KNA1_LZONE_TransportationZone             -- Transportation zone to or from which the goods are delivered\n    ,K1.VBUND AS KNA1_VBUND_TradingPartnerCompanyID             -- Trading Partner Company ID\n    ,K1.STCEG AS KNA1_STCEG_VATRegisterationNumber             -- VAT Registration Number\n    ,K1.DEAR2 AS KNA1_DEAR2_SalesPartnerIndicator             -- Sales Partner Indicator\n    ,K1.BRAN1 AS KNA1_BRAN1_IndustryCode1             -- Industry Code 1\n    ,K1.BRAN5 AS KNA1_BRAN5_IndustryCode5             -- Industry code 5\n    ,K1.KATR10 AS KNA1_KATR10_Attribute10           -- Attribute 10\n    ,K1.STKZN AS KNA1_STKZN_NaturalPerson             -- Natural Person\n    ,K1.TXJCD AS KNA1_TXJCD_TaxJurisdiction             -- Tax Jurisdiction\n    ,K1.KTOCD AS KNA1_KTOCD_RefAccGroupOneTimeCust             -- Reference Account Group for One-Time Account (Customer)\n    ,K1.PFORT AS KNA1_PFORT_POBoxCity             -- PO Box city\n    ,K1.DUEFL AS KNA1_DUEFL_StatusOfDataTransfer             -- Status of Data Transfer into Subsequent Release\n    ,K1.KDKG4 AS KNA1_KDKG4_CustomerConditionGroup4             -- Customer condition group 4\n    ,K1.FITYP AS KNA1_FITYP_TaxType             -- Tax type\n    ,K1.STCDT AS KNA1_STCDT_TaxNumberType             -- Tax Number Type\n    ,K1.XICMS AS KNA1_XICMS_ICMSExempt             -- Customer is ICMS-exempt\n    ,K1.XXIPI AS KNA1_XXIPI_IPIExempt             -- Customer is IPI-exempt\n    ,K1.XSUBT AS KNA1_XSUBT_CustGrpSubstTributaryCalculation             -- Customer group for Substitui\u00e7ao Tribut\u00e1ria calculation\n    ,K1.CFOPC AS KNA1_CFOPC_CFOPCategory             -- Customer's CFOP category\n    ,K1.TXLW1 AS KNA1_TXLW1_TaxLawICMS             -- Tax law: ICMS\n    ,K1.TXLW2 AS KNA1_TXLW2_TaxLawIPI             -- Tax law: IPI\n    ,K1.CASSD AS KNA1_CASSD_CentralSalesBlock             -- Central sales block for customer\n    ,K1.KNURL AS KNA1_KNURL_UniformResourceLocator             -- Uniform Resource Locator\n    ,K1.J_1KFREPRE AS KNA1_J_1KFREPRE_NameOfRepresentative   -- Name of Representative\n    ,K1.J_1KFTBUS AS KNA1_J_1KFTBUS_TypeOfBusiness     -- Type of Business\n    ,K1.NODEL AS KNA1_NODEL_CentralDeletionBlock             -- Central deletion block for master record\n    ,K1.OID_POREQD AS KNA1_OID_POREQD_PurchaseOrderRequired   -- Purchase order required: X = Yes, Blank = No\n    ,A1.ADDRNUMBER AS ADRC_ADDRNUMBER_AddressNumber   -- Address Number\n    ,A1.DATE_FROM AS ADRC_DATE_FROM_ValidFromDate     -- Valid-from date - in current Release only 00010101 possible\n    ,A1.NATION AS ADRC_NATION_VersionIdIntAddress             -- Version ID for International Addresses\n    ,A1.DATE_TO AS ADRC_DATE_TO_ValidTo             -- Valid-to date in current Release only 99991231 possible\n    ,A1.TITLE AS ADRC_TITLE_FormOfAddressKey                     -- Form-of-Address Key\n    ,A1.NAME1 AS ADRC_NAME1                     -- Name adrc1\n    ,A1.NAME2 AS ADRC_NAME2                     -- Name adrc2\n    ,A1.NAME3 AS ADRC_NAME3                     -- Name adrc3\n    ,A1.NAME4 AS ADRC_NAME4                     -- Name adrc4\n    ,A1.NAME_TEXT AS ADRC_NAME_TEXT             -- Converted name field (with form of address)\n    ,A1.NAME_CO AS ADRC_NAME_CO                 -- c/o name\n    ,A1.CITY1 AS ADRC_CITY1                     -- City adrc\n    ,A1.CITY2 AS ADRC_CITY2                     -- District adrc\n    ,A1.HOME_CITY AS ADRC_HOME_CITY             -- City (different from postal city)\n    ,A1.POST_CODE1 AS ADRC_POST_CODE1           -- City postal code\n    ,A1.POST_CODE2 AS ADRC_POST_CODE2           -- PO Box Postal Code\n    ,A1.POST_CODE3 AS ADRC_POST_CODE3           -- Company Postal Code (for Large Customers)\n    ,A1.PO_BOX AS ADRC_PO_BOX                   -- PO Box adrc\n    ,A1.PO_BOX_LOC AS ADRC_PO_BOX_LOC           -- PO Box city adrc\n    ,A1.PO_BOX_REG AS ADRC_PO_BOX_REG           -- Region for PO Box (Country, State, Province, ...)\n    ,A1.TRANSPZONE AS ADRC_TRANSPZONE           -- Transportation zone to or from which the goods are delivered adrc\n    ,A1.STREET AS ADRC_STREET                   -- Street\n    ,A1.HOUSE_NUM1 AS ADRC_HOUSE_NUM1           -- House Number\n    ,A1.HOUSE_NUM2 AS ADRC_HOUSE_NUM2           -- House number supplement\n    ,A1.HOUSE_NUM3 AS ADRC_HOUSE_NUM3           -- (Not supported) House Number Range\n    ,A1.STR_SUPPL1 AS ADRC_STR_SUPPL1           -- Street 2\n    ,A1.STR_SUPPL2 AS ADRC_STR_SUPPL2           -- Street 3\n    ,A1.STR_SUPPL3 AS ADRC_STR_SUPPL3           -- Street 4\n    ,A1.LOCATION AS ADRC_LOCATION               -- Street 5\n    ,A1.BUILDING AS ADRC_BUILDING               -- Building (Number or Code)\n    ,A1.FLOOR AS ADRC_FLOOR                     -- Floor in building\n    ,A1.ROOMNUMBER AS ADRC_ROOMNUMBER           -- Room or Apartment Number\n    ,A1.COUNTRY AS ADRC_COUNTRY                 -- Country Key adrc\n    ,A1.LANGU AS ADRC_LANGU                     -- Language Key adrc\n    ,A1.REGION AS ADRC_REGION                   -- Region (State, Province, County) adrc\n    ,A1.ADDR_GROUP AS ADRC_ADDR_GROUP           -- Address Group (Key) (Business Address Services)\n    ,A1.FLAGGROUPS AS ADRC_FLAGGROUPS           -- Flag: There are more address group assignments\n    ,A1.PERS_ADDR AS ADRC_PERS_ADDR             -- Flag: This is a personal address\n    ,A1.SORT1 AS ADRC_SORT1\t\t\t\t\t  -- Search Term 1\n    ,A1.SORT2 AS ADRC_SORT2                     -- Search Term 2\n    ,A1.DEFLT_COMM AS ADRC_DEFLT_COMM           -- Communication Method (Key) (Business Address Services)\n    ,A1.TEL_NUMBER AS ADRC_TEL_NUMBER           -- First telephone no.: dialling code+number\n    ,A1.TEL_EXTENS AS ADRC_TEL_EXTENS           -- First Telephone No.: Extension\n    ,A1.FAX_NUMBER AS ADRC_FAX_NUMBER           -- First fax no.: dialling code+number\n    ,A1.FAX_EXTENS AS ADRC_FAX_EXTENS           -- First fax no.: extension\n    ,A1.FLAGCOMM2 AS ADRC_FLAGCOMM2             -- Flag: Telephone number(s) maintained\n    ,A1.FLAGCOMM3 AS ADRC_FLAGCOMM3             -- Flag: Fax number(s) maintained\n    ,A1.FLAGCOMM4 AS ADRC_FLAGCOMM4             -- Flag: Teletex number(s) maintained\n    ,A1.FLAGCOMM5 AS ADRC_FLAGCOMM5             -- Flag: Telex number(s) maintained\n    ,A1.FLAGCOMM6 AS ADRC_FLAGCOMM6             -- Indicator: E-Mail Address(es) Maintained\n    ,A1.FLAGCOMM7 AS ADRC_FLAGCOMM7             -- Flag: RML (remote mail) addresse(s) maintained\n    ,A1.FLAGCOMM12 AS FLAGCOMM12                -- Flag: URI/FTP address maintained\n    ,A1.FLAGCOMM13 AS FLAGCOMM13                  -- Flag: Pager address maintained\n    ,A1.MC_NAME1 AS ADRC_MC_NAME1                 -- Name (field NAME1) in upper case for matchcode\n    ,A1.MC_CITY1 AS ADRC_MC_CITY1                 -- City name in upper case for search help\n    ,A1.MC_STREET AS ADRC_MC_STREET               -- Street name in upper case for search help\n    ,A1.EXTENSION1 AS ADRC_EXTENSION1             -- Extension (only for data conversion) (e.g. data line)\n    ,A1.EXTENSION2 AS ADRC_EXTENSION2             -- Extension (only for data conversion) (e.g. telebox)\n    ,A1.TIME_ZONE AS ADRC_TIME_ZONE               -- Address time zone\n    ,A1.TAXJURCODE AS TAXJURCODE                  -- Tax Jurisdiction adrc\n    ,A1.LANGU_CREA AS LANGU_CREA                  -- Address record creation original language\n    ,A1.ADRC_UUID AS ADRC_ADRC_UUID               -- UUID Used in the Address\n    ,A1.UUID_BELATED AS ADRC_UUID_BELATED         -- Indicator: UUID was generated later\n    ,A1.ADRC_ERR_STATUS AS ADRC_ADRC_ERR_STATUS   -- Error Status of Address\n    ,A1.PO_BOX_LOBBY AS ADRC_PO_BOX_LOBBY         -- PO Box Lobby\n    ,T1.TXT30 AS T077X_TXT30                      -- Customer Account Group Description\n    ,k1.AUFSD as KNA1_AUFSD\n    ,TVAST.VTEXT as TVAST_VTEXT\n    ,k1.FAKSD as KNA1_FAKSD\n    ,TVFST.VTEXT as TVFST_VTEXT\n    ,k1.LIFSD as KNA1_LIFSD\n    ,TVLST.VTEXT as TVLST_VTEXT\n\n    FROM CHEM_DEVELOPMENT.RAW.SAP_G9_KNA1 as K1\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_ADRC as A1 on K1.ADRNR = a1.ADDRNUMBER and A1.NATION = '' and A1.CLIENT = K1.MANDT\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_T077X as T1 on T1.KTOKD = K1.KTOKD and T1.SPRAS = 'E'\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_T002T as E1 on E1.SPRAS = 'E' and E1.SPRSL = K1.SPRAS \n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_T005T as C1 on C1.SPRAS = K1.SPRAS and C1.LAND1 = K1.LAND1\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_TVFST as TVFST \n    \ton TVFST.FAKSP = k1.FAKSD and TVFST.SPRAS = 'E'\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_TVLST as TVLST \n    \ton TVLST.LIFSP = k1.LIFSD and TVLST.SPRAS = 'E'\n    LEFT JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_TVAST as TVAST\n    \ton TVAST.AUFSP = k1.AUFSD and TVAST.SPRAS = 'E'\n    \n\n-- CREATE OR REPLACE VIEW curated.SALES_VOLUME_REPORT_VW AS (\n-- SELECT\n--   SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n--  ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n--  ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n--  ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n--  ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Industry\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n--  ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n--  ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n--  ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n--  ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n--  ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n--  ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n--  ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n--  ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n--  ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n--  ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n--  ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n--  ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n--  ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \n-- FROM\n--   CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAK\" SAP_VBAK_STG\n--   INNER JOIN CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAP1\" SAP_VBAP_STG\n--     ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) AND\n--        (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n--   LEFT OUTER JOIN CHEM_DEVELOPMENT.RAW.\"SAPG9_TCURR\" TCURR\n--     ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n--   LEFT JOIN CHEM_DEVELoPMENT.RAW.\"DM_SALES_VOLUMELATEST\" DM_SAlES_VOLUMELATEST\n--   ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n--   AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n--   AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \n-- where SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\n-- and sap_vbak_stg.ernam <> 'XXPMBUPLD' \n-- and sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \n-- and sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n-- );", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/DIGITAL_MARKETING/VW_CUSTOMER_MASTER.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01868295669555664, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.320371Z", "completed_at": "2019-10-17T04:42:17.336900Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.337063Z", "completed_at": "2019-10-17T04:42:17.338486Z"}]}, {"node": {"name": "VW_SALES_VOLUME_REPORT", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/DIGITAL_MARKETING/VW_SALES_VOLUME_REPORT.sql", "original_file_path": "models/curated/DIGITAL_MARKETING/VW_SALES_VOLUME_REPORT.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='view' ) }}\n\n\nSELECT\n  SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n ,DM_SALES_VOLUMELATEST.\"Industry\"\n ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n ,DM_SALES_VOLUMELATEST.\"End Use\"\n ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \nFROM\n  {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_VBAK') }} SAP_VBAK_STG\n  INNER JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAP_G9_VBAP1') }} SAP_VBAP_STG\n    ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) \n    AND (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n  LEFT OUTER JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'SAPG9_TCURR') }} TCURR\n    ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n  LEFT JOIN {{ source('CHEM_DEVELOPMENT_RAW', 'DM_SALES_VOLUMELATEST') }} DM_SAlES_VOLUMELATEST\n    ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n    AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n    AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \nwhere SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\nand sap_vbak_stg.ernam <> 'XXPMBUPLD' \nand sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \nand sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n\n\n-- CREATE OR REPLACE VIEW curated.SALES_VOLUME_REPORT_VW AS (\n-- SELECT\n--   SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n--  ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n--  ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n--  ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n--  ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Industry\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n--  ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n--  ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n--  ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n--  ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n--  ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n--  ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n--  ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n--  ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n--  ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n--  ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n--  ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n--  ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n--  ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \n-- FROM\n--   CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAK\" SAP_VBAK_STG\n--   INNER JOIN CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAP1\" SAP_VBAP_STG\n--     ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) AND\n--        (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n--   LEFT OUTER JOIN CHEM_DEVELOPMENT.RAW.\"SAPG9_TCURR\" TCURR\n--     ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n--   LEFT JOIN CHEM_DEVELoPMENT.RAW.\"DM_SALES_VOLUMELATEST\" DM_SAlES_VOLUMELATEST\n--   ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n--   AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n--   AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \n-- where SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\n-- and sap_vbak_stg.ernam <> 'XXPMBUPLD' \n-- and sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \n-- and sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n-- );", "refs": [], "sources": [["CHEM_DEVELOPMENT_RAW", "SAP_G9_VBAK"], ["CHEM_DEVELOPMENT_RAW", "SAP_G9_VBAP1"], ["CHEM_DEVELOPMENT_RAW", "SAPG9_TCURR"], ["CHEM_DEVELOPMENT_RAW", "DM_SALES_VOLUMELATEST"]], "depends_on": {"nodes": ["source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_VBAK", "source.otd.CHEM_DEVELOPMENT_RAW.SAP_G9_VBAP1", "source.otd.CHEM_DEVELOPMENT_RAW.SAPG9_TCURR", "source.otd.CHEM_DEVELOPMENT_RAW.DM_SALES_VOLUMELATEST"], "macros": []}, "unique_id": "model.otd.VW_SALES_VOLUME_REPORT", "empty": false, "fqn": ["otd", "curated", "DIGITAL_MARKETING", "VW_SALES_VOLUME_REPORT"], "tags": [], "config": {"enabled": true, "materialized": "view", "post-hook": [], "pre-hook": [], "tags": [], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "DM_VHMAP", "database": "CHEM_DEV_CURATED"}, "schema": "DM_VHMAP", "database": "CHEM_DEV_CURATED", "alias": "VW_SALES_VOLUME_REPORT", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n\nSELECT\n  SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n ,DM_SALES_VOLUMELATEST.\"Industry\"\n ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n ,DM_SALES_VOLUMELATEST.\"End Use\"\n ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \nFROM\n  CHEM_DEVELOPMENT.RAW.SAP_G9_VBAK SAP_VBAK_STG\n  INNER JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_VBAP1 SAP_VBAP_STG\n    ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) \n    AND (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n  LEFT OUTER JOIN CHEM_DEVELOPMENT.RAW.SAPG9_TCURR TCURR\n    ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n  LEFT JOIN CHEM_DEVELOPMENT.RAW.DM_SALES_VOLUMELATEST DM_SAlES_VOLUMELATEST\n    ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n    AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n    AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \nwhere SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\nand sap_vbak_stg.ernam <> 'XXPMBUPLD' \nand sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \nand sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n\n\n-- CREATE OR REPLACE VIEW curated.SALES_VOLUME_REPORT_VW AS (\n-- SELECT\n--   SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n--  ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n--  ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n--  ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n--  ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Industry\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n--  ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n--  ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n--  ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n--  ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n--  ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n--  ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n--  ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n--  ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n--  ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n--  ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n--  ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n--  ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n--  ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \n-- FROM\n--   CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAK\" SAP_VBAK_STG\n--   INNER JOIN CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAP1\" SAP_VBAP_STG\n--     ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) AND\n--        (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n--   LEFT OUTER JOIN CHEM_DEVELOPMENT.RAW.\"SAPG9_TCURR\" TCURR\n--     ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n--   LEFT JOIN CHEM_DEVELoPMENT.RAW.\"DM_SALES_VOLUMELATEST\" DM_SAlES_VOLUMELATEST\n--   ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n--   AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n--   AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \n-- where SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\n-- and sap_vbak_stg.ernam <> 'XXPMBUPLD' \n-- and sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \n-- and sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n-- );", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\nSELECT\n  SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n ,DM_SALES_VOLUMELATEST.\"Industry\"\n ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n ,DM_SALES_VOLUMELATEST.\"End Use\"\n ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \nFROM\n  CHEM_DEVELOPMENT.RAW.SAP_G9_VBAK SAP_VBAK_STG\n  INNER JOIN CHEM_DEVELOPMENT.RAW.SAP_G9_VBAP1 SAP_VBAP_STG\n    ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) \n    AND (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n  LEFT OUTER JOIN CHEM_DEVELOPMENT.RAW.SAPG9_TCURR TCURR\n    ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n  LEFT JOIN CHEM_DEVELOPMENT.RAW.DM_SALES_VOLUMELATEST DM_SAlES_VOLUMELATEST\n    ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n    AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n    AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \nwhere SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\nand sap_vbak_stg.ernam <> 'XXPMBUPLD' \nand sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \nand sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n\n\n-- CREATE OR REPLACE VIEW curated.SALES_VOLUME_REPORT_VW AS (\n-- SELECT\n--   SAP_VBAK_STG.VBELN as \"VBELN_SALESORDERNO\"\n--  ,SAP_VBAK_STG.AUART AS \"AUART_SALESORDTYPE\"\n--  ,SAP_VBAK_STG.erdat AS \"ERDAT_SalesOrderCreationDate\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account\"\n--  ,DM_SALES_VOLUMELATEST.\"Parent Account Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Super Region Desc\"\n--  ,SAP_VBAK_STG.KUNNR AS \"KUNNR_SOLDTO-NO\"\n--  ,DM_SALES_VOLUMELATEST.\"Customer Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Deliverable Product Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"Finished  Product\"\n--  ,DM_SALES_VOLUMELATEST.\"Industry\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment\"\n--  ,DM_SALES_VOLUMELATEST.\"Market Segment Desc\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use\"\n--  ,DM_SALES_VOLUMELATEST.\"End Use Desc\"\n--  ,SAP_VBAK_STG.VKORG AS \"KUNNR_SALESORG\"\n--  ,SAP_VBAK_STG.SPART AS \"KUNNR_DIVISION\"  \n--  ,SAP_VBAK_STG.VTWEG AS \"KUNNR_DISTCHANNEL\"\n--  ,SAP_VBAP_STG.MATNR AS \"MATNR_MATERIALNO\"\n--  ,SAP_VBAP_STG.NETWR AS \"NETWR_NETVALUE\" \n--  ,SAP_VBAP_STG.WAERK AS \"WAERK_CURRENCY\"\n--  ,SAP_VBAP_STG.ZMENG AS \"ZMENG_QUANTITY\"\n--  ,SAP_VBAP_STG.ZIEME AS \"ZIEME_QTY_UOM\"\n--  ,SAP_VBAP_STG.UMZIZ AS \"UMZIZ_CONV_NUMERATOR\"\n--  ,SAP_VBAP_STG.UMZIN AS \"UMZIN_CONV_DENOMINATOR\"\n--  ,SAP_VBAP_STG.MEINS AS \"MEINS_BASE_UOM\"\n--  ,TCURR.UKURS AS \"UKURS_EXCHANGE_RATE\"\n--  ,(SAP_VBAP_STG.NETWR * 1/TCURR.UKURS) AS \"NETVALUE_USD\" \n-- FROM\n--   CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAK\" SAP_VBAK_STG\n--   INNER JOIN CHEM_DEVELOPMENT.RAW.\"SAP_G9_VBAP1\" SAP_VBAP_STG\n--     ON (SAP_VBAK_STG.VBELN = SAP_VBAP_STG.VBELN) AND\n--        (SAP_VBAK_STG.MANDT = SAP_VBAP_STG.MANDT)\n--   LEFT OUTER JOIN CHEM_DEVELOPMENT.RAW.\"SAPG9_TCURR\" TCURR\n--     ON (SAP_VBAP_STG.WAERK = TCURR.FCURR) \n--   LEFT JOIN CHEM_DEVELoPMENT.RAW.\"DM_SALES_VOLUMELATEST\" DM_SAlES_VOLUMELATEST\n--   ON(LTRIM(SAP_VBAK_STG.KUNNR,'0#') = DM_SALES_VOLUMELATEST.\"Customer\")\n--   AND(LTRIM(SAP_VBAK_STG.VBELN,'0#') = DM_SALES_VOLUMELATEST.\"Sales Order\")\n--   AND(LTRIM(SAP_VBAP_STG.MATNR,'0#') = DM_SALES_VOLUMELATEST.\"Deliverable Product\")\n  \n-- where SAP_VBAK_STG.auart in ('TA','ORB', 'KB', 'KBB', 'ORF')\n-- and sap_vbak_stg.ernam <> 'XXPMBUPLD' \n-- and sap_vbak_stg.spart not in ('NS', 'IC', 'ID') \n-- and sap_vbap_stg.pstyv in ('TAN', 'TAB', 'ZTAW', 'TAQ', 'ZTAQ')\n\n-- );", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/DIGITAL_MARKETING/VW_SALES_VOLUME_REPORT.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.013101816177368164, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.340434Z", "completed_at": "2019-10-17T04:42:17.351230Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.351518Z", "completed_at": "2019-10-17T04:42:17.353071Z"}]}, {"node": {"name": "TSTTBL", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/DIGITAL_MARKETING/TSTTBL.sql", "original_file_path": "models/curated/DIGITAL_MARKETING/TSTTBL.sql", "package_name": "otd", "raw_sql": "{{ config(\n        materialized='source_table' \n        , transient=false\n       \n    ) \n}}\n\n--  ,pre_hook=[\n--             \"CREATE TABLE IF EXISTS {{ this }}_CLO CLONE {{ this }}\"\n--         ]\n\nSELECT\n 1 as num_col\n ,'STRING' as str_col\n ,'15-Jan-2019'::Date as dt_col\n , 2.0 as flt_col3", "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "unique_id": "model.otd.TSTTBL", "empty": false, "fqn": ["otd", "curated", "DIGITAL_MARKETING", "TSTTBL"], "tags": [], "config": {"enabled": true, "materialized": "source_table", "post-hook": [], "pre-hook": [], "tags": [], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "DM_VHMAP", "database": "CHEM_DEV_CURATED", "transient": false}, "schema": "DM_VHMAP", "database": "CHEM_DEV_CURATED", "alias": "TSTTBL", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\n--  ,pre_hook=[\n--             \"CREATE TABLE IF EXISTS \"CHEM_DEV_CURATED\".\"DM_VHMAP\".\"TSTTBL\"_CLO CLONE \"CHEM_DEV_CURATED\".\"DM_VHMAP\".\"TSTTBL\"\"\n--         ]\n\nSELECT\n 1 as num_col\n ,'STRING' as str_col\n ,'15-Jan-2019'::Date as dt_col\n , 2.0 as flt_col3", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n--  ,pre_hook=[\n--             \"CREATE TABLE IF EXISTS \"CHEM_DEV_CURATED\".\"DM_VHMAP\".\"TSTTBL\"_CLO CLONE \"CHEM_DEV_CURATED\".\"DM_VHMAP\".\"TSTTBL\"\"\n--         ]\n\nSELECT\n 1 as num_col\n ,'STRING' as str_col\n ,'15-Jan-2019'::Date as dt_col\n , 2.0 as flt_col3", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/DIGITAL_MARKETING/TSTTBL.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009691715240478516, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.355114Z", "completed_at": "2019-10-17T04:42:17.362757Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.362948Z", "completed_at": "2019-10-17T04:42:17.364246Z"}]}, {"node": {"name": "DELIVERY_BASE", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/DELIVERY_BASE.sql", "original_file_path": "models/curated/OTD/DELIVERY_BASE.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='table' ) }}\n\nSELECT I.VBELN,\n\n                   I.POSNR,\n\n                   I.ERDAT,\n\n                   I.PSTYV,\n\n                   I.MATNR,\n\n                   I.WERKS,\n\n                   I.VGBEL,\n\n                   I.VGPOS,\n\n                   I.PRCTR,\n\n                   H.LFDAT,\n\n                   B.BU,\n\n                   B.GBU,\n\n                   B.SOLID_LIQUID_GROUPING,\n\n                   C.INTRANSIT_IND\n\n               FROM {{ source('SAPG9', 'LIPS') }} AS I\n\n               LEFT JOIN {{ source('SAPG9', 'LIKP') }} AS H\n\n                 ON I.VBELN = H.VBELN\n\n               LEFT OUTER JOIN ( {{ ref('BU_SOL_LIQ_ID') }}) AS B\n\n                 ON I.PRCTR = B.PROFIT_CENTER_CODE\n\n               LEFT OUTER JOIN (  {{ ref('PLANT_TRANSIT_ID') }} ) AS C\n\n                 ON I.WERKS = C.WERKS \n\n               WHERE I.VGBEL != ''\n\n                 AND I.PSTYV != 'ELN'\n\n                 AND I.ERDAT BETWEEN '2019-01-01' AND '2019-10-01'", "refs": [["BU_SOL_LIQ_ID"], ["PLANT_TRANSIT_ID"]], "sources": [["SAPG9", "LIPS"], ["SAPG9", "LIKP"]], "depends_on": {"nodes": ["source.otd.SAPG9.LIPS", "source.otd.SAPG9.LIKP", "model.otd.BU_SOL_LIQ_ID", "model.otd.PLANT_TRANSIT_ID"], "macros": []}, "unique_id": "model.otd.DELIVERY_BASE", "empty": false, "fqn": ["otd", "curated", "OTD", "DELIVERY_BASE"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "table", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "DELIVERY_BASE", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nSELECT I.VBELN,\n\n                   I.POSNR,\n\n                   I.ERDAT,\n\n                   I.PSTYV,\n\n                   I.MATNR,\n\n                   I.WERKS,\n\n                   I.VGBEL,\n\n                   I.VGPOS,\n\n                   I.PRCTR,\n\n                   H.LFDAT,\n\n                   B.BU,\n\n                   B.GBU,\n\n                   B.SOLID_LIQUID_GROUPING,\n\n                   C.INTRANSIT_IND\n\n               FROM CHEM_DEV_RAW.SAPG9.LIPS AS I\n\n               LEFT JOIN CHEM_DEV_RAW.SAPG9.LIKP AS H\n\n                 ON I.VBELN = H.VBELN\n\n               LEFT OUTER JOIN ( __dbt__CTE__BU_SOL_LIQ_ID) AS B\n\n                 ON I.PRCTR = B.PROFIT_CENTER_CODE\n\n               LEFT OUTER JOIN (  __dbt__CTE__PLANT_TRANSIT_ID ) AS C\n\n                 ON I.WERKS = C.WERKS \n\n               WHERE I.VGBEL != ''\n\n                 AND I.PSTYV != 'ELN'\n\n                 AND I.ERDAT BETWEEN '2019-01-01' AND '2019-10-01'", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.otd.BU_SOL_LIQ_ID", "sql": " __dbt__CTE__BU_SOL_LIQ_ID as (\nSELECT A.PROFIT_CENTER_CODE,\n\n                   A.BU,\n\n                   A.GBU,\n\n                   B.SOLID_LIQUID_GROUPING\n\n              FROM CHEM_DEV_CURATED.OTD.VW_OTD_BU_DEF AS A\n\n              INNER JOIN CHEM_DEV_CURATED.OTD.VW_OTD_BU_SOLLIQ_SPLIT AS B\n                ON A.BU = B.BU\n)"}, {"id": "model.otd.PLANT_TRANSIT_ID", "sql": " __dbt__CTE__PLANT_TRANSIT_ID as (\nSELECT DISTINCT WERKS,\n\n                          NAME1,\n\n                          IFF(LEFT(NAME1, 1) = 'I', 'Intransit', 'Non-Intransit') AS INTRANSIT_IND\n\n            FROM CHEM_DEV_RAW.SAPG9.T001W\n)"}], "injected_sql": "\n\nwith __dbt__CTE__BU_SOL_LIQ_ID as (\nSELECT A.PROFIT_CENTER_CODE,\n\n                   A.BU,\n\n                   A.GBU,\n\n                   B.SOLID_LIQUID_GROUPING\n\n              FROM CHEM_DEV_CURATED.OTD.VW_OTD_BU_DEF AS A\n\n              INNER JOIN CHEM_DEV_CURATED.OTD.VW_OTD_BU_SOLLIQ_SPLIT AS B\n                ON A.BU = B.BU\n),  __dbt__CTE__PLANT_TRANSIT_ID as (\nSELECT DISTINCT WERKS,\n\n                          NAME1,\n\n                          IFF(LEFT(NAME1, 1) = 'I', 'Intransit', 'Non-Intransit') AS INTRANSIT_IND\n\n            FROM CHEM_DEV_RAW.SAPG9.T001W\n)SELECT I.VBELN,\n\n                   I.POSNR,\n\n                   I.ERDAT,\n\n                   I.PSTYV,\n\n                   I.MATNR,\n\n                   I.WERKS,\n\n                   I.VGBEL,\n\n                   I.VGPOS,\n\n                   I.PRCTR,\n\n                   H.LFDAT,\n\n                   B.BU,\n\n                   B.GBU,\n\n                   B.SOLID_LIQUID_GROUPING,\n\n                   C.INTRANSIT_IND\n\n               FROM CHEM_DEV_RAW.SAPG9.LIPS AS I\n\n               LEFT JOIN CHEM_DEV_RAW.SAPG9.LIKP AS H\n\n                 ON I.VBELN = H.VBELN\n\n               LEFT OUTER JOIN ( __dbt__CTE__BU_SOL_LIQ_ID) AS B\n\n                 ON I.PRCTR = B.PROFIT_CENTER_CODE\n\n               LEFT OUTER JOIN (  __dbt__CTE__PLANT_TRANSIT_ID ) AS C\n\n                 ON I.WERKS = C.WERKS \n\n               WHERE I.VGBEL != ''\n\n                 AND I.PSTYV != 'ELN'\n\n                 AND I.ERDAT BETWEEN '2019-01-01' AND '2019-10-01'", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/DELIVERY_BASE.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.02167201042175293, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.366061Z", "completed_at": "2019-10-17T04:42:17.385365Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.385577Z", "completed_at": "2019-10-17T04:42:17.387224Z"}]}, {"node": {"name": "SALES_REVENUE_CUSTOMERS", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/DIGITAL_MARKETING/SALES_REVENUE_CUSTOMERS.sql", "original_file_path": "models/curated/DIGITAL_MARKETING/SALES_REVENUE_CUSTOMERS.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='table' ) }}\n\nSELECT\n    VR.\"KUNNR_SOLDTO-NO\" as \"Customer\"\n    ,CM.\"KNA1_LAND1_COUNTRYKEY\" as \"Country Key\"\n    ,CM.\"KNA1_ORT01_CITY\" as \"City\"\n    ,CM.\"KNA1_NAME1\" as \"Company Name\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4) as \"Year of sale\"\n    ,ROUND(SUM(VR.\"NETVALUE_USD\")) as \"Total Sales\"\n\nFROM {{ ref('VW_SALES_VOLUME_REPORT') }} VR\nJOIN {{ ref('VW_CUSTOMER_MASTER') }}  CM\n    ON CM.\"KNA1_KUNNR_CUSTOMERNUMBER\" = VR.\"KUNNR_SOLDTO-NO\"\nGROUP BY\n    VR.\"KUNNR_SOLDTO-NO\"\n    ,CM.\"KNA1_LAND1_COUNTRYKEY\"\n    ,CM.\"KNA1_ORT01_CITY\"\n    ,CM.\"KNA1_NAME1\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4)\nORDER BY\n    CM.\"KNA1_NAME1\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4)\n\n\n-- CREATE OR REPLACE VIEW \"CHEM_DEV_SELFSERVE\".\"DIGITAL_MARKETING\".\"SALES_REVENUE_CUSTOMERS_final\" AS (\n-- SELECT\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\" as \"Customer\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_LAND1_COUNTRYKEY\" as \"Country Key\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_ORT01_CITY\" as \"City\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\" as \"Company Name\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4) as \"Year of sale\"\n--     ,ROUND(SUM(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"NETVALUE_USD\")) as \"Total Sales\"\n-- FROM \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\"\n-- JOIN \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\" on \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_KUNNR_CUSTOMERNUMBER\" = \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\"\n-- GROUP BY\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_LAND1_COUNTRYKEY\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_ORT01_CITY\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4)\n-- ORDER BY\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4));", "refs": [["VW_SALES_VOLUME_REPORT"], ["VW_CUSTOMER_MASTER"]], "sources": [], "depends_on": {"nodes": ["model.otd.VW_SALES_VOLUME_REPORT", "model.otd.VW_CUSTOMER_MASTER"], "macros": []}, "unique_id": "model.otd.SALES_REVENUE_CUSTOMERS", "empty": false, "fqn": ["otd", "curated", "DIGITAL_MARKETING", "SALES_REVENUE_CUSTOMERS"], "tags": [], "config": {"enabled": true, "materialized": "table", "post-hook": [], "pre-hook": [], "tags": [], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "DM_VHMAP", "database": "CHEM_DEV_CURATED"}, "schema": "DM_VHMAP", "database": "CHEM_DEV_CURATED", "alias": "SALES_REVENUE_CUSTOMERS", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nSELECT\n    VR.\"KUNNR_SOLDTO-NO\" as \"Customer\"\n    ,CM.\"KNA1_LAND1_COUNTRYKEY\" as \"Country Key\"\n    ,CM.\"KNA1_ORT01_CITY\" as \"City\"\n    ,CM.\"KNA1_NAME1\" as \"Company Name\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4) as \"Year of sale\"\n    ,ROUND(SUM(VR.\"NETVALUE_USD\")) as \"Total Sales\"\n\nFROM \"CHEM_DEV_CURATED\".\"DM_VHMAP\".\"VW_SALES_VOLUME_REPORT\" VR\nJOIN \"CHEM_DEV_CURATED\".\"DM_VHMAP\".\"VW_CUSTOMER_MASTER\"  CM\n    ON CM.\"KNA1_KUNNR_CUSTOMERNUMBER\" = VR.\"KUNNR_SOLDTO-NO\"\nGROUP BY\n    VR.\"KUNNR_SOLDTO-NO\"\n    ,CM.\"KNA1_LAND1_COUNTRYKEY\"\n    ,CM.\"KNA1_ORT01_CITY\"\n    ,CM.\"KNA1_NAME1\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4)\nORDER BY\n    CM.\"KNA1_NAME1\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4)\n\n\n-- CREATE OR REPLACE VIEW \"CHEM_DEV_SELFSERVE\".\"DIGITAL_MARKETING\".\"SALES_REVENUE_CUSTOMERS_final\" AS (\n-- SELECT\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\" as \"Customer\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_LAND1_COUNTRYKEY\" as \"Country Key\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_ORT01_CITY\" as \"City\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\" as \"Company Name\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4) as \"Year of sale\"\n--     ,ROUND(SUM(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"NETVALUE_USD\")) as \"Total Sales\"\n-- FROM \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\"\n-- JOIN \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\" on \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_KUNNR_CUSTOMERNUMBER\" = \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\"\n-- GROUP BY\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_LAND1_COUNTRYKEY\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_ORT01_CITY\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4)\n-- ORDER BY\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4));", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nSELECT\n    VR.\"KUNNR_SOLDTO-NO\" as \"Customer\"\n    ,CM.\"KNA1_LAND1_COUNTRYKEY\" as \"Country Key\"\n    ,CM.\"KNA1_ORT01_CITY\" as \"City\"\n    ,CM.\"KNA1_NAME1\" as \"Company Name\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4) as \"Year of sale\"\n    ,ROUND(SUM(VR.\"NETVALUE_USD\")) as \"Total Sales\"\n\nFROM \"CHEM_DEV_CURATED\".\"DM_VHMAP\".\"VW_SALES_VOLUME_REPORT\" VR\nJOIN \"CHEM_DEV_CURATED\".\"DM_VHMAP\".\"VW_CUSTOMER_MASTER\"  CM\n    ON CM.\"KNA1_KUNNR_CUSTOMERNUMBER\" = VR.\"KUNNR_SOLDTO-NO\"\nGROUP BY\n    VR.\"KUNNR_SOLDTO-NO\"\n    ,CM.\"KNA1_LAND1_COUNTRYKEY\"\n    ,CM.\"KNA1_ORT01_CITY\"\n    ,CM.\"KNA1_NAME1\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4)\nORDER BY\n    CM.\"KNA1_NAME1\"\n    ,LEFT(VR.\"ERDAT_SalesOrderCreationDate\",4)\n\n\n-- CREATE OR REPLACE VIEW \"CHEM_DEV_SELFSERVE\".\"DIGITAL_MARKETING\".\"SALES_REVENUE_CUSTOMERS_final\" AS (\n-- SELECT\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\" as \"Customer\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_LAND1_COUNTRYKEY\" as \"Country Key\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_ORT01_CITY\" as \"City\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\" as \"Company Name\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4) as \"Year of sale\"\n--     ,ROUND(SUM(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"NETVALUE_USD\")) as \"Total Sales\"\n-- FROM \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\"\n-- JOIN \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\" on \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_KUNNR_CUSTOMERNUMBER\" = \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\"\n-- GROUP BY\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"KUNNR_SOLDTO-NO\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_LAND1_COUNTRYKEY\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_ORT01_CITY\"\n--     ,\"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4)\n-- ORDER BY\n--     \"CHEM_DEVELOPMENT\".\"CURATED\".\"VWCUSTOMER_MASTER\".\"KNA1_NAME1\"\n--     ,LEFT(\"CHEM_DEVELOPMENT\".\"CURATED\".\"SALES_VOLUME_REPORT_VW\".\"ERDAT_SalesOrderCreationDate\",4));", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/DIGITAL_MARKETING/SALES_REVENUE_CUSTOMERS.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009950876235961914, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.400624Z", "completed_at": "2019-10-17T04:42:17.408714Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.408957Z", "completed_at": "2019-10-17T04:42:17.410126Z"}]}, {"node": {"name": "VW_SHIPMENTS_LIPS", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/VW_SHIPMENTS_LIPS.sql", "original_file_path": "models/curated/OTD/VW_SHIPMENTS_LIPS.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='view' ) }}\n\nwith SRC_LIPS as (\n\n    select * from {{ source('SAPG9', 'LIPS') }}\n\n),\nSRC_T001W as (\n\n    select * from {{ source('SAPG9', 'T001W') }}\n\n)\n\nSELECT  l.WERKS\n        ,l.VGBEL\n        ,l.VGPOS\n        ,shipmnts.VBELN\n        ,shipmnts.MARINE_SHIPMENT\n        ,shipmnts.FREIGHT_BOOKING\n        ,shipmnts.SHIPMENT\n        ,shipmnts.FREIGHT_ORDER\n        ,t.NAME1 as transit_name\nFROM SRC_LIPS l\n    JOIN SRC_T001W t ON t.WERKS = l.WERKS\n    JOIN {{ ref('VW_SHIPMENTS') }} shipmnts ON shipmnts.VBELN = l.VBELN\nwhere PSTYV != 'ELN'", "refs": [["VW_SHIPMENTS"]], "sources": [["SAPG9", "LIPS"], ["SAPG9", "T001W"]], "depends_on": {"nodes": ["source.otd.SAPG9.LIPS", "source.otd.SAPG9.T001W", "model.otd.VW_SHIPMENTS"], "macros": []}, "unique_id": "model.otd.VW_SHIPMENTS_LIPS", "empty": false, "fqn": ["otd", "curated", "OTD", "VW_SHIPMENTS_LIPS"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "view", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "VW_SHIPMENTS_LIPS", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nwith SRC_LIPS as (\n\n    select * from CHEM_DEV_RAW.SAPG9.LIPS\n\n),\nSRC_T001W as (\n\n    select * from CHEM_DEV_RAW.SAPG9.T001W\n\n)\n\nSELECT  l.WERKS\n        ,l.VGBEL\n        ,l.VGPOS\n        ,shipmnts.VBELN\n        ,shipmnts.MARINE_SHIPMENT\n        ,shipmnts.FREIGHT_BOOKING\n        ,shipmnts.SHIPMENT\n        ,shipmnts.FREIGHT_ORDER\n        ,t.NAME1 as transit_name\nFROM SRC_LIPS l\n    JOIN SRC_T001W t ON t.WERKS = l.WERKS\n    JOIN __dbt__CTE__VW_SHIPMENTS shipmnts ON shipmnts.VBELN = l.VBELN\nwhere PSTYV != 'ELN'", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.otd.VW_SOLIDS_SHIPMENT", "sql": " __dbt__CTE__VW_SOLIDS_SHIPMENT as (\nwith SRC_LIKP as (\n\n    select * from CHEM_DEV_RAW.SAPG9.LIKP\n\n),\nSRC_VTTP as (\n\n    select * from CHEM_DEV_RAW.SAPG9.VTTP\n\n),\nSRC_VTTK as (\n\n    select * from CHEM_DEV_RAW.SAPG9.VTTK\n\n)\n\nSELECT\n    l.VBELN\n    ,vt.TKNUM AS SHIPMENT_NUMBER\n    ,IFF( vtk.VSART = '10' ,vtk.TKNUM  , NULL) AS MARINE_SHIPMENT\n    ,IFF( vtk.VSART = '10' ,vtk.EXT_FREIGHT_ORD , NULL) AS FREIGHT_BOOKING\n    ,IFF( vtk.VSART != '10',vtk.TKNUM , NULL) AS SHIPMENT\n    ,IFF( vtk.VSART != '10',vtk.EXT_FREIGHT_ORD , NULL) AS FREIGHT_ORDER\nFROM SRC_LIKP l\n    LEFT OUTER JOIN  SRC_VTTP vt ON vt.VBELN = l.VBELN\n    LEFT OUTER JOIN  SRC_VTTK vtk ON vtk.TKNUM = vt.TKNUM\n)"}, {"id": "model.otd.VW_SHIPMENTS", "sql": " __dbt__CTE__VW_SHIPMENTS as (\n\n\n\nSELECT * FROM __dbt__CTE__VW_SOLIDS_SHIPMENT\nUNION\nSELECT * FROM \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"VW_LIQUIDS_SHIPMENT\"\n)"}], "injected_sql": "\n\nwith  __dbt__CTE__VW_SOLIDS_SHIPMENT as (\nwith SRC_LIKP as (\n\n    select * from CHEM_DEV_RAW.SAPG9.LIKP\n\n),\nSRC_VTTP as (\n\n    select * from CHEM_DEV_RAW.SAPG9.VTTP\n\n),\nSRC_VTTK as (\n\n    select * from CHEM_DEV_RAW.SAPG9.VTTK\n\n)\n\nSELECT\n    l.VBELN\n    ,vt.TKNUM AS SHIPMENT_NUMBER\n    ,IFF( vtk.VSART = '10' ,vtk.TKNUM  , NULL) AS MARINE_SHIPMENT\n    ,IFF( vtk.VSART = '10' ,vtk.EXT_FREIGHT_ORD , NULL) AS FREIGHT_BOOKING\n    ,IFF( vtk.VSART != '10',vtk.TKNUM , NULL) AS SHIPMENT\n    ,IFF( vtk.VSART != '10',vtk.EXT_FREIGHT_ORD , NULL) AS FREIGHT_ORDER\nFROM SRC_LIKP l\n    LEFT OUTER JOIN  SRC_VTTP vt ON vt.VBELN = l.VBELN\n    LEFT OUTER JOIN  SRC_VTTK vtk ON vtk.TKNUM = vt.TKNUM\n),  __dbt__CTE__VW_SHIPMENTS as (\n\n\n\nSELECT * FROM __dbt__CTE__VW_SOLIDS_SHIPMENT\nUNION\nSELECT * FROM \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"VW_LIQUIDS_SHIPMENT\"\n),SRC_LIPS as (\n\n    select * from CHEM_DEV_RAW.SAPG9.LIPS\n\n),\nSRC_T001W as (\n\n    select * from CHEM_DEV_RAW.SAPG9.T001W\n\n)\n\nSELECT  l.WERKS\n        ,l.VGBEL\n        ,l.VGPOS\n        ,shipmnts.VBELN\n        ,shipmnts.MARINE_SHIPMENT\n        ,shipmnts.FREIGHT_BOOKING\n        ,shipmnts.SHIPMENT\n        ,shipmnts.FREIGHT_ORDER\n        ,t.NAME1 as transit_name\nFROM SRC_LIPS l\n    JOIN SRC_T001W t ON t.WERKS = l.WERKS\n    JOIN __dbt__CTE__VW_SHIPMENTS shipmnts ON shipmnts.VBELN = l.VBELN\nwhere PSTYV != 'ELN'", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/VW_SHIPMENTS_LIPS.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.01720714569091797, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.429804Z", "completed_at": "2019-10-17T04:42:17.444689Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.444880Z", "completed_at": "2019-10-17T04:42:17.446533Z"}]}, {"node": {"name": "SHIPMENTS_IN_TRANSIT", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/SHIPMENTS_IN_TRANSIT.sql", "original_file_path": "models/curated/OTD/SHIPMENTS_IN_TRANSIT.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='table' ) }}\n\nSELECT *\n    FROM {{ ref('VW_SHIPMENTS_LIPS') }}\n    WHERE CHARINDEX('I' ,transit_name) < 1", "refs": [["VW_SHIPMENTS_LIPS"]], "sources": [], "depends_on": {"nodes": ["model.otd.VW_SHIPMENTS_LIPS"], "macros": []}, "unique_id": "model.otd.SHIPMENTS_IN_TRANSIT", "empty": false, "fqn": ["otd", "curated", "OTD", "SHIPMENTS_IN_TRANSIT"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "table", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "SHIPMENTS_IN_TRANSIT", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nSELECT *\n    FROM \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"VW_SHIPMENTS_LIPS\"\n    WHERE CHARINDEX('I' ,transit_name) < 1", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nSELECT *\n    FROM \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"VW_SHIPMENTS_LIPS\"\n    WHERE CHARINDEX('I' ,transit_name) < 1", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/SHIPMENTS_IN_TRANSIT.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008684158325195312, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.461782Z", "completed_at": "2019-10-17T04:42:17.468580Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.468747Z", "completed_at": "2019-10-17T04:42:17.470015Z"}]}, {"node": {"name": "SHIPMENTS_NOT_IN_TRANSIT", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/SHIPMENTS_NOT_IN_TRANSIT.sql", "original_file_path": "models/curated/OTD/SHIPMENTS_NOT_IN_TRANSIT.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='table' ) }}\n\nSELECT *\n    FROM {{ ref('VW_SHIPMENTS_LIPS') }}\n    WHERE CHARINDEX('I' ,transit_name) > 1", "refs": [["VW_SHIPMENTS_LIPS"]], "sources": [], "depends_on": {"nodes": ["model.otd.VW_SHIPMENTS_LIPS"], "macros": []}, "unique_id": "model.otd.SHIPMENTS_NOT_IN_TRANSIT", "empty": false, "fqn": ["otd", "curated", "OTD", "SHIPMENTS_NOT_IN_TRANSIT"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "table", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "SHIPMENTS_NOT_IN_TRANSIT", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nSELECT *\n    FROM \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"VW_SHIPMENTS_LIPS\"\n    WHERE CHARINDEX('I' ,transit_name) > 1", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nSELECT *\n    FROM \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"VW_SHIPMENTS_LIPS\"\n    WHERE CHARINDEX('I' ,transit_name) > 1", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/SHIPMENTS_NOT_IN_TRANSIT.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.008977174758911133, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.473393Z", "completed_at": "2019-10-17T04:42:17.479036Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.479176Z", "completed_at": "2019-10-17T04:42:17.480373Z"}]}, {"node": {"name": "VW_SALES_STOCKORDER", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/VW_SALES_STOCKORDER.sql", "original_file_path": "models/curated/OTD/VW_SALES_STOCKORDER.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='table' ) }}\n\nwith\nSRC_VBAP as (\n\n    select * from {{ source('SAPG9', 'VBAP') }}\n\n),\nSRC_EKPO as (\n\n    select * from {{ source('SAPG9', 'EKPO') }}\n\n)\n\nSELECT\n    l.VBELN\n    ,v.VBELN as vbap_VBELN\n    ,e.EBELN as ekpo_EBELN\n    ,l.WERKS\n    ,l.MARINE_SHIPMENT\n    ,l.FREIGHT_BOOKING\n    ,l.SHIPMENT\n    ,l.FREIGHT_ORDER\n    ,l.transit_name\nFROM {{ ref('VW_SHIPMENTS_LIPS') }} l\n    LEFT OUTER JOIN SRC_VBAP v ON v.VBELN = l.VGBEL and v.POSNR = l.VGPOS\n    LEFT OUTER JOIN SRC_EKPO e ON e.EBELN = l.VGBEL and e.EBELP = l.VGPOS", "refs": [["VW_SHIPMENTS_LIPS"]], "sources": [["SAPG9", "VBAP"], ["SAPG9", "EKPO"]], "depends_on": {"nodes": ["source.otd.SAPG9.VBAP", "source.otd.SAPG9.EKPO", "model.otd.VW_SHIPMENTS_LIPS"], "macros": []}, "unique_id": "model.otd.VW_SALES_STOCKORDER", "empty": false, "fqn": ["otd", "curated", "OTD", "VW_SALES_STOCKORDER"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "table", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "VW_SALES_STOCKORDER", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nwith\nSRC_VBAP as (\n\n    select * from CHEM_DEV_RAW.SAPG9.VBAP\n\n),\nSRC_EKPO as (\n\n    select * from CHEM_DEV_RAW.SAPG9.EKPO\n\n)\n\nSELECT\n    l.VBELN\n    ,v.VBELN as vbap_VBELN\n    ,e.EBELN as ekpo_EBELN\n    ,l.WERKS\n    ,l.MARINE_SHIPMENT\n    ,l.FREIGHT_BOOKING\n    ,l.SHIPMENT\n    ,l.FREIGHT_ORDER\n    ,l.transit_name\nFROM \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"VW_SHIPMENTS_LIPS\" l\n    LEFT OUTER JOIN SRC_VBAP v ON v.VBELN = l.VGBEL and v.POSNR = l.VGPOS\n    LEFT OUTER JOIN SRC_EKPO e ON e.EBELN = l.VGBEL and e.EBELP = l.VGPOS", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith\nSRC_VBAP as (\n\n    select * from CHEM_DEV_RAW.SAPG9.VBAP\n\n),\nSRC_EKPO as (\n\n    select * from CHEM_DEV_RAW.SAPG9.EKPO\n\n)\n\nSELECT\n    l.VBELN\n    ,v.VBELN as vbap_VBELN\n    ,e.EBELN as ekpo_EBELN\n    ,l.WERKS\n    ,l.MARINE_SHIPMENT\n    ,l.FREIGHT_BOOKING\n    ,l.SHIPMENT\n    ,l.FREIGHT_ORDER\n    ,l.transit_name\nFROM \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"VW_SHIPMENTS_LIPS\" l\n    LEFT OUTER JOIN SRC_VBAP v ON v.VBELN = l.VGBEL and v.POSNR = l.VGPOS\n    LEFT OUTER JOIN SRC_EKPO e ON e.EBELN = l.VGBEL and e.EBELP = l.VGPOS", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/VW_SALES_STOCKORDER.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010976076126098633, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.482185Z", "completed_at": "2019-10-17T04:42:17.491085Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.491270Z", "completed_at": "2019-10-17T04:42:17.492702Z"}]}, {"node": {"name": "DELIVERY_FINAL", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/DELIVERY_FINAL.sql", "original_file_path": "models/curated/OTD/DELIVERY_FINAL.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='table' ) }}\n\nSELECT A.VBELN,\n\n                   A.POSNR,\n\n                   A.ERDAT,\n\n                   A.PSTYV,\n\n                   A.MATNR,\n\n                   A.WERKS,\n\n                   A.VGBEL,\n\n                   A.VGPOS,\n\n                   A.PRCTR,\n\n                   A.LFDAT,\n\n                   A.BU,\n\n                   A.GBU,\n\n                   A.SOLID_LIQUID_GROUPING,\n\n                   A.INTRANSIT_IND,\n\n                   IFF(A.INTRANSIT_IND = 'Intransit', IFNULL(B.STO, ''), '') AS STO_REFERENCE,\n\n                   IFF(A.INTRANSIT_IND = 'Intransit', IFNULL(B.DELIVERY_NO, ''), A.VBELN) AS DELV_SHIPMENT\n\n               FROM ( {{ ref('DELIVERY_BASE') }} ) AS A\n\n               LEFT OUTER JOIN ( {{ ref('INTRANSIT_STO_DELIVERY') }} ) AS B\n\n                  ON A.VGBEL = B.SALES_ORDER\n\n                 AND A.VGPOS = B.SALES_ORDER_ITEM", "refs": [["DELIVERY_BASE"], ["INTRANSIT_STO_DELIVERY"]], "sources": [], "depends_on": {"nodes": ["model.otd.DELIVERY_BASE", "model.otd.INTRANSIT_STO_DELIVERY"], "macros": []}, "unique_id": "model.otd.DELIVERY_FINAL", "empty": false, "fqn": ["otd", "curated", "OTD", "DELIVERY_FINAL"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "table", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "DELIVERY_FINAL", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nSELECT A.VBELN,\n\n                   A.POSNR,\n\n                   A.ERDAT,\n\n                   A.PSTYV,\n\n                   A.MATNR,\n\n                   A.WERKS,\n\n                   A.VGBEL,\n\n                   A.VGPOS,\n\n                   A.PRCTR,\n\n                   A.LFDAT,\n\n                   A.BU,\n\n                   A.GBU,\n\n                   A.SOLID_LIQUID_GROUPING,\n\n                   A.INTRANSIT_IND,\n\n                   IFF(A.INTRANSIT_IND = 'Intransit', IFNULL(B.STO, ''), '') AS STO_REFERENCE,\n\n                   IFF(A.INTRANSIT_IND = 'Intransit', IFNULL(B.DELIVERY_NO, ''), A.VBELN) AS DELV_SHIPMENT\n\n               FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_BASE\" ) AS A\n\n               LEFT OUTER JOIN ( __dbt__CTE__INTRANSIT_STO_DELIVERY ) AS B\n\n                  ON A.VGBEL = B.SALES_ORDER\n\n                 AND A.VGPOS = B.SALES_ORDER_ITEM", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.otd.INTRANSIT_STO_BASE", "sql": " __dbt__CTE__INTRANSIT_STO_BASE as (\nSELECT SO.VBELN AS SALES_ORDER,\n\n                   SO.POSNR AS SALES_ORDER_ITEM,\n\n                   SO.IHREZ_E AS STO\n\n               FROM CHEM_DEV_RAW.SAPG9.VBKD AS SO\n\n               INNER JOIN (SELECT DISTINCT VGBEL, VGPOS FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_BASE\" ) WHERE INTRANSIT_IND = 'Intransit') AS DEL\n\n                 ON SO.VBELN = DEL.VGBEL\n\n                AND SO.POSNR = DEL.VGPOS\n\n               WHERE SO.IHREZ_E != ''\n)"}, {"id": "model.otd.INTRANSIT_STO_DELIVERY", "sql": " __dbt__CTE__INTRANSIT_STO_DELIVERY as (\nSELECT DISTINCT A.SALES_ORDER,\n\n                            A.SALES_ORDER_ITEM,\n\n                            A.STO,\n\n                            B.VBELN AS DELIVERY_NO\n\n               FROM CHEM_DEV_RAW.SAPG9.LIPS AS B\n\n               INNER JOIN (  __dbt__CTE__INTRANSIT_STO_BASE  ) AS A\n\n                 ON A.STO = B.VGBEL\n)"}], "injected_sql": "\n\nwith __dbt__CTE__INTRANSIT_STO_BASE as (\nSELECT SO.VBELN AS SALES_ORDER,\n\n                   SO.POSNR AS SALES_ORDER_ITEM,\n\n                   SO.IHREZ_E AS STO\n\n               FROM CHEM_DEV_RAW.SAPG9.VBKD AS SO\n\n               INNER JOIN (SELECT DISTINCT VGBEL, VGPOS FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_BASE\" ) WHERE INTRANSIT_IND = 'Intransit') AS DEL\n\n                 ON SO.VBELN = DEL.VGBEL\n\n                AND SO.POSNR = DEL.VGPOS\n\n               WHERE SO.IHREZ_E != ''\n),  __dbt__CTE__INTRANSIT_STO_DELIVERY as (\nSELECT DISTINCT A.SALES_ORDER,\n\n                            A.SALES_ORDER_ITEM,\n\n                            A.STO,\n\n                            B.VBELN AS DELIVERY_NO\n\n               FROM CHEM_DEV_RAW.SAPG9.LIPS AS B\n\n               INNER JOIN (  __dbt__CTE__INTRANSIT_STO_BASE  ) AS A\n\n                 ON A.STO = B.VGBEL\n)SELECT A.VBELN,\n\n                   A.POSNR,\n\n                   A.ERDAT,\n\n                   A.PSTYV,\n\n                   A.MATNR,\n\n                   A.WERKS,\n\n                   A.VGBEL,\n\n                   A.VGPOS,\n\n                   A.PRCTR,\n\n                   A.LFDAT,\n\n                   A.BU,\n\n                   A.GBU,\n\n                   A.SOLID_LIQUID_GROUPING,\n\n                   A.INTRANSIT_IND,\n\n                   IFF(A.INTRANSIT_IND = 'Intransit', IFNULL(B.STO, ''), '') AS STO_REFERENCE,\n\n                   IFF(A.INTRANSIT_IND = 'Intransit', IFNULL(B.DELIVERY_NO, ''), A.VBELN) AS DELV_SHIPMENT\n\n               FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_BASE\" ) AS A\n\n               LEFT OUTER JOIN ( __dbt__CTE__INTRANSIT_STO_DELIVERY ) AS B\n\n                  ON A.VGBEL = B.SALES_ORDER\n\n                 AND A.VGPOS = B.SALES_ORDER_ITEM", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/DELIVERY_FINAL.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.020849943161010742, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.494559Z", "completed_at": "2019-10-17T04:42:17.513436Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.513603Z", "completed_at": "2019-10-17T04:42:17.514936Z"}]}, {"node": {"name": "SHIPMENT_BASE_FINAL", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/SHIPMENT_BASE_FINAL.sql", "original_file_path": "models/curated/OTD/SHIPMENT_BASE_FINAL.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='view' ) }}\n\nSELECT * FROM ( {{ ref('SHIPMENT_BASE_SOLIDS') }} ) WHERE RANK_SHP = 1\n\n                UNION ALL\n\n            SELECT * FROM ( {{ ref('SHIPMENT_BASE_LIQUIDS') }} ) WHERE RANK_SHP = 1", "refs": [["SHIPMENT_BASE_SOLIDS"], ["SHIPMENT_BASE_LIQUIDS"]], "sources": [], "depends_on": {"nodes": ["model.otd.SHIPMENT_BASE_SOLIDS", "model.otd.SHIPMENT_BASE_LIQUIDS"], "macros": []}, "unique_id": "model.otd.SHIPMENT_BASE_FINAL", "empty": false, "fqn": ["otd", "curated", "OTD", "SHIPMENT_BASE_FINAL"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "view", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "SHIPMENT_BASE_FINAL", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nSELECT * FROM ( __dbt__CTE__SHIPMENT_BASE_SOLIDS ) WHERE RANK_SHP = 1\n\n                UNION ALL\n\n            SELECT * FROM ( __dbt__CTE__SHIPMENT_BASE_LIQUIDS ) WHERE RANK_SHP = 1", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.otd.SHIPMENT_BASE_SOLIDS", "sql": " __dbt__CTE__SHIPMENT_BASE_SOLIDS as (\nSELECT A.TKNUM AS SHIPMENT_NUMBER,\n\n                   IFF(A.VSART = '10', '', A.EXT_FREIGHT_ORD) AS FREIGHT_ORDER,\n\n                   IFF(A.VSART = '10', A.EXT_FREIGHT_ORD, '') AS FREIGHT_BOOKING,\n\n                   IFF(CHARINDEX('/', TEXT1) = 0, TEXT1, LEFT(TEXT1, (CHARINDEX('/', TEXT1)-1))) AS CONTAINER_ID,\n\n                   A.EXTI2 AS BOOKING_ID,\n\n                   A.VSART AS SHIPMENT_TYPE,\n\n                   B.VBELN AS DELIVERY_NO,\n\n                   RANK() OVER (PARTITION BY B.VBELN, A.VSART ORDER BY A.TKNUM) AS RANK_SHP\n\n              FROM CHEM_DEV_RAW.SAPG9.VTTK AS A\n\n              INNER JOIN (SELECT DISTINCT SHP.TKNUM, SHP.VBELN FROM\n\n                           CHEM_DEV_RAW.SAPG9.VTTP AS SHP\n\n                          WHERE VBELN IN (SELECT DISTINCT DELV_SHIPMENT \n                            FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_FINAL\" )\n\n                                            WHERE SOLID_LIQUID_GROUPING = 'Solids'\n\n                                              AND DELV_SHIPMENT != '')\n\n                         ) AS B\n\n                ON A.TKNUM = B.TKNUM\n)"}, {"id": "model.otd.SHIPMENT_BASE_LIQUIDS", "sql": " __dbt__CTE__SHIPMENT_BASE_LIQUIDS as (\nSELECT A.SHNUMBER AS SHIPMENT_NUMBER,\n\n                   A.YCDRG_EXT_FREIGHT_ORD AS FREIGHT_ORDER,\n\n                   A.YCDRG_EXT_FREIGHT_ORD2 AS FREIGHT_BOOKING,\n\n                   '' AS CONTAINER_ID,\n\n                   A.XBLNR AS BOOKING_ID,\n\n                   A.VSART AS SHIPMENT_TYPE,\n\n                   B.DOC_NUMBER AS DELIVERY_NO,\n\n                   RANK() OVER (PARTITION BY B.DOC_NUMBER, A.VSART ORDER BY A.SHNUMBER) AS RANK_SHP\n\n              FROM CHEM_DEV_RAW.SAPG9.OIGS AS A\n\n              INNER JOIN (SELECT DISTINCT SHP.SHNUMBER, SHP.DOC_NUMBER FROM\n\n                           CHEM_DEV_RAW.SAPG9.OIGSI AS SHP\n\n                          WHERE DOC_NUMBER IN (SELECT DISTINCT DELV_SHIPMENT FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_FINAL\" )\n\n                                                    WHERE SOLID_LIQUID_GROUPING = 'Liquids'\n\n                                                      AND DELV_SHIPMENT != '')\n\n                            AND SHP.DOC_TYP = 'J') B\n\n                ON A.SHNUMBER = B.SHNUMBER\n)"}], "injected_sql": "\n\nwith __dbt__CTE__SHIPMENT_BASE_SOLIDS as (\nSELECT A.TKNUM AS SHIPMENT_NUMBER,\n\n                   IFF(A.VSART = '10', '', A.EXT_FREIGHT_ORD) AS FREIGHT_ORDER,\n\n                   IFF(A.VSART = '10', A.EXT_FREIGHT_ORD, '') AS FREIGHT_BOOKING,\n\n                   IFF(CHARINDEX('/', TEXT1) = 0, TEXT1, LEFT(TEXT1, (CHARINDEX('/', TEXT1)-1))) AS CONTAINER_ID,\n\n                   A.EXTI2 AS BOOKING_ID,\n\n                   A.VSART AS SHIPMENT_TYPE,\n\n                   B.VBELN AS DELIVERY_NO,\n\n                   RANK() OVER (PARTITION BY B.VBELN, A.VSART ORDER BY A.TKNUM) AS RANK_SHP\n\n              FROM CHEM_DEV_RAW.SAPG9.VTTK AS A\n\n              INNER JOIN (SELECT DISTINCT SHP.TKNUM, SHP.VBELN FROM\n\n                           CHEM_DEV_RAW.SAPG9.VTTP AS SHP\n\n                          WHERE VBELN IN (SELECT DISTINCT DELV_SHIPMENT \n                            FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_FINAL\" )\n\n                                            WHERE SOLID_LIQUID_GROUPING = 'Solids'\n\n                                              AND DELV_SHIPMENT != '')\n\n                         ) AS B\n\n                ON A.TKNUM = B.TKNUM\n),  __dbt__CTE__SHIPMENT_BASE_LIQUIDS as (\nSELECT A.SHNUMBER AS SHIPMENT_NUMBER,\n\n                   A.YCDRG_EXT_FREIGHT_ORD AS FREIGHT_ORDER,\n\n                   A.YCDRG_EXT_FREIGHT_ORD2 AS FREIGHT_BOOKING,\n\n                   '' AS CONTAINER_ID,\n\n                   A.XBLNR AS BOOKING_ID,\n\n                   A.VSART AS SHIPMENT_TYPE,\n\n                   B.DOC_NUMBER AS DELIVERY_NO,\n\n                   RANK() OVER (PARTITION BY B.DOC_NUMBER, A.VSART ORDER BY A.SHNUMBER) AS RANK_SHP\n\n              FROM CHEM_DEV_RAW.SAPG9.OIGS AS A\n\n              INNER JOIN (SELECT DISTINCT SHP.SHNUMBER, SHP.DOC_NUMBER FROM\n\n                           CHEM_DEV_RAW.SAPG9.OIGSI AS SHP\n\n                          WHERE DOC_NUMBER IN (SELECT DISTINCT DELV_SHIPMENT FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_FINAL\" )\n\n                                                    WHERE SOLID_LIQUID_GROUPING = 'Liquids'\n\n                                                      AND DELV_SHIPMENT != '')\n\n                            AND SHP.DOC_TYP = 'J') B\n\n                ON A.SHNUMBER = B.SHNUMBER\n)SELECT * FROM ( __dbt__CTE__SHIPMENT_BASE_SOLIDS ) WHERE RANK_SHP = 1\n\n                UNION ALL\n\n            SELECT * FROM ( __dbt__CTE__SHIPMENT_BASE_LIQUIDS ) WHERE RANK_SHP = 1", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/SHIPMENT_BASE_FINAL.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.010930299758911133, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.540142Z", "completed_at": "2019-10-17T04:42:17.548926Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.549067Z", "completed_at": "2019-10-17T04:42:17.550433Z"}]}, {"node": {"name": "FINAL_OUTPUT", "root_path": "/Users/d3vl0p3r/Dev/ws.xom/dtransform/otd", "resource_type": "model", "path": "curated/OTD/FINAL_OUTPUT.sql", "original_file_path": "models/curated/OTD/FINAL_OUTPUT.sql", "package_name": "otd", "raw_sql": "{{ config(materialized='table' ) }}\n\nSELECT A.VBELN AS DELIVERY_NO,\n\n                   A.POSNR AS DELIVERY_ITEM,\n\n                   A.VGBEL AS SALES_ORDER,\n\n                   A.VGPOS AS SALES_ORDER_ITEM,\n\n                   A.STO_REFERENCE AS STO_REFERENCE_NO,\n\n                   A.DELV_SHIPMENT AS DELIVERY_REFERENCE_NO,                  \n\n                   A.ERDAT AS CREATED_ON,\n\n                   A.WERKS AS PLANT,\n\n                   A.INTRANSIT_IND,\n\n                   IFNULL(NM.SHIPMENT_NUMBER, '') AS SHIPMENT_NUMBER,\n\n                   IFNULL(M.SHIPMENT_NUMBER, '') AS MARINE_SHIPMENT,\n\n                   IFNULL(NM.FREIGHT_ORDER, '') AS FREIGHT_ORDER,\n\n                   IFNULL(M.FREIGHT_BOOKING, '') AS FREIGHT_BOOKING,\n\n                   A.GBU AS OTD_GBU,\n\n                   A.BU AS OTD_BU,\n\n                   A.SOLID_LIQUID_GROUPING,\n\n                   IFNULL(NM.BOOKING_ID, IFNULL(M.BOOKING_ID, '')) AS BOOKING_ID,\n\n                   IFNULL(NM.CONTAINER_ID,IFNULL(M.CONTAINER_ID, '')) AS CONTAINER_ID,\n\n                   IFNULL(NM.SHIPMENT_TYPE, IFNULL(M.SHIPMENT_TYPE, '')) AS SHIPMENT_TYPE                  \n\n              FROM ( {{ ref('DELIVERY_FINAL') }} ) AS A\n\n              LEFT OUTER JOIN ( SELECT * FROM ( {{ ref('SHIPMENT_BASE_FINAL') }} ) WHERE SHIPMENT_TYPE = '10') AS M\n\n                ON A.DELV_SHIPMENT = M.DELIVERY_NO\n\n              LEFT OUTER JOIN ( SELECT * FROM ( {{ ref('SHIPMENT_BASE_FINAL') }} ) WHERE SHIPMENT_TYPE != '10') AS NM\n\n                ON A.DELV_SHIPMENT = NM.DELIVERY_NO", "refs": [["DELIVERY_FINAL"], ["SHIPMENT_BASE_FINAL"], ["SHIPMENT_BASE_FINAL"]], "sources": [], "depends_on": {"nodes": ["model.otd.DELIVERY_FINAL", "model.otd.SHIPMENT_BASE_FINAL", "model.otd.SHIPMENT_BASE_FINAL"], "macros": []}, "unique_id": "model.otd.FINAL_OUTPUT", "empty": false, "fqn": ["otd", "curated", "OTD", "FINAL_OUTPUT"], "tags": ["OTD"], "config": {"enabled": true, "materialized": "table", "post-hook": [], "pre-hook": [], "tags": ["OTD"], "quoting": {}, "column_types": {}, "persist_docs": {}, "vars": {}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED"}, "schema": "OTD_VENKAT", "database": "CHEM_DEV_CURATED", "alias": "FINAL_OUTPUT", "columns": {}, "description": "", "compiled": true, "compiled_sql": "\n\nSELECT A.VBELN AS DELIVERY_NO,\n\n                   A.POSNR AS DELIVERY_ITEM,\n\n                   A.VGBEL AS SALES_ORDER,\n\n                   A.VGPOS AS SALES_ORDER_ITEM,\n\n                   A.STO_REFERENCE AS STO_REFERENCE_NO,\n\n                   A.DELV_SHIPMENT AS DELIVERY_REFERENCE_NO,                  \n\n                   A.ERDAT AS CREATED_ON,\n\n                   A.WERKS AS PLANT,\n\n                   A.INTRANSIT_IND,\n\n                   IFNULL(NM.SHIPMENT_NUMBER, '') AS SHIPMENT_NUMBER,\n\n                   IFNULL(M.SHIPMENT_NUMBER, '') AS MARINE_SHIPMENT,\n\n                   IFNULL(NM.FREIGHT_ORDER, '') AS FREIGHT_ORDER,\n\n                   IFNULL(M.FREIGHT_BOOKING, '') AS FREIGHT_BOOKING,\n\n                   A.GBU AS OTD_GBU,\n\n                   A.BU AS OTD_BU,\n\n                   A.SOLID_LIQUID_GROUPING,\n\n                   IFNULL(NM.BOOKING_ID, IFNULL(M.BOOKING_ID, '')) AS BOOKING_ID,\n\n                   IFNULL(NM.CONTAINER_ID,IFNULL(M.CONTAINER_ID, '')) AS CONTAINER_ID,\n\n                   IFNULL(NM.SHIPMENT_TYPE, IFNULL(M.SHIPMENT_TYPE, '')) AS SHIPMENT_TYPE                  \n\n              FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_FINAL\" ) AS A\n\n              LEFT OUTER JOIN ( SELECT * FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"SHIPMENT_BASE_FINAL\" ) WHERE SHIPMENT_TYPE = '10') AS M\n\n                ON A.DELV_SHIPMENT = M.DELIVERY_NO\n\n              LEFT OUTER JOIN ( SELECT * FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"SHIPMENT_BASE_FINAL\" ) WHERE SHIPMENT_TYPE != '10') AS NM\n\n                ON A.DELV_SHIPMENT = NM.DELIVERY_NO", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nSELECT A.VBELN AS DELIVERY_NO,\n\n                   A.POSNR AS DELIVERY_ITEM,\n\n                   A.VGBEL AS SALES_ORDER,\n\n                   A.VGPOS AS SALES_ORDER_ITEM,\n\n                   A.STO_REFERENCE AS STO_REFERENCE_NO,\n\n                   A.DELV_SHIPMENT AS DELIVERY_REFERENCE_NO,                  \n\n                   A.ERDAT AS CREATED_ON,\n\n                   A.WERKS AS PLANT,\n\n                   A.INTRANSIT_IND,\n\n                   IFNULL(NM.SHIPMENT_NUMBER, '') AS SHIPMENT_NUMBER,\n\n                   IFNULL(M.SHIPMENT_NUMBER, '') AS MARINE_SHIPMENT,\n\n                   IFNULL(NM.FREIGHT_ORDER, '') AS FREIGHT_ORDER,\n\n                   IFNULL(M.FREIGHT_BOOKING, '') AS FREIGHT_BOOKING,\n\n                   A.GBU AS OTD_GBU,\n\n                   A.BU AS OTD_BU,\n\n                   A.SOLID_LIQUID_GROUPING,\n\n                   IFNULL(NM.BOOKING_ID, IFNULL(M.BOOKING_ID, '')) AS BOOKING_ID,\n\n                   IFNULL(NM.CONTAINER_ID,IFNULL(M.CONTAINER_ID, '')) AS CONTAINER_ID,\n\n                   IFNULL(NM.SHIPMENT_TYPE, IFNULL(M.SHIPMENT_TYPE, '')) AS SHIPMENT_TYPE                  \n\n              FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"DELIVERY_FINAL\" ) AS A\n\n              LEFT OUTER JOIN ( SELECT * FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"SHIPMENT_BASE_FINAL\" ) WHERE SHIPMENT_TYPE = '10') AS M\n\n                ON A.DELV_SHIPMENT = M.DELIVERY_NO\n\n              LEFT OUTER JOIN ( SELECT * FROM ( \"CHEM_DEV_CURATED\".\"OTD_VENKAT\".\"SHIPMENT_BASE_FINAL\" ) WHERE SHIPMENT_TYPE != '10') AS NM\n\n                ON A.DELV_SHIPMENT = NM.DELIVERY_NO", "wrapped_sql": "None", "build_path": "target/compiled/otd/curated/OTD/FINAL_OUTPUT.sql"}, "error": null, "skip": false, "status": null, "fail": null, "warn": null, "execution_time": 0.009276866912841797, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-10-17T04:42:17.553741Z", "completed_at": "2019-10-17T04:42:17.560942Z"}, {"name": "execute", "started_at": "2019-10-17T04:42:17.561119Z", "completed_at": "2019-10-17T04:42:17.562538Z"}]}], "generated_at": "2019-10-17T04:42:17.922701Z", "elapsed_time": 1.2413740158081055}
